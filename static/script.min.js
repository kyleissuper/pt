!function(t){var e={};function n(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(r,o,function(e){return t[e]}.bind(null,o));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){const r=n(1);cytoscape.use(r);window.cy=cytoscape({container:document.getElementById("cy"),boxSelectionEnabled:!1,autounselectify:!0,layout:{name:"cose-bilkent",animate:!1},style:[{selector:"node",style:{"background-color":"#ad1a66",label:"data(label)"}},{selector:"edge",style:{width:3,"target-arrow-shape":"triangle","line-color":"#ad1a66",label:"data(label)"}}],elements:ontology})},function(t,e,n){var r;t.exports=function t(e,n,o){function i(s,h){if(!n[s]){if(!e[s]){var g="function"==typeof r&&r;if(!h&&g)return r(s,!0);if(a)return a(s,!0);var l=new Error("Cannot find module '"+s+"'");throw l.code="MODULE_NOT_FOUND",l}var c=n[s]={exports:{}};e[s][0].call(c.exports,function(t){var n=e[s][1][t];return i(n||t)},c,c.exports,t,e,n,o)}return n[s].exports}for(var a="function"==typeof r&&r,s=0;s<o.length;s++)i(o[s]);return i}({1:[function(t,e,n){var r=t("./FDLayoutConstants");function o(){}for(var i in r)o[i]=r[i];o.DEFAULT_USE_MULTI_LEVEL_SCALING=!1,o.DEFAULT_RADIAL_SEPARATION=r.DEFAULT_EDGE_LENGTH,o.DEFAULT_COMPONENT_SEPERATION=60,e.exports=o},{"./FDLayoutConstants":10}],2:[function(t,e,n){var r=t("./FDLayoutEdge");function o(t,e,n){r.call(this,t,e,n)}for(var i in o.prototype=Object.create(r.prototype),r)o[i]=r[i];e.exports=o},{"./FDLayoutEdge":11}],3:[function(t,e,n){var r=t("./LGraph");function o(t,e,n){r.call(this,t,e,n)}for(var i in o.prototype=Object.create(r.prototype),r)o[i]=r[i];e.exports=o},{"./LGraph":19}],4:[function(t,e,n){var r=t("./LGraphManager");function o(t){r.call(this,t)}for(var i in o.prototype=Object.create(r.prototype),r)o[i]=r[i];e.exports=o},{"./LGraphManager":20}],5:[function(t,e,n){var r=t("./FDLayout"),o=t("./CoSEGraphManager"),i=t("./CoSEGraph"),a=t("./CoSENode"),s=t("./CoSEEdge"),h=t("./CoSEConstants"),g=t("./FDLayoutConstants"),l=t("./LayoutConstants"),c=t("./Point"),u=t("./PointD"),p=t("./Layout"),d=t("./Integer"),f=t("./IGeometry"),y=t("./LGraph"),E=t("./Transform");function v(){r.call(this)}for(var L in v.prototype=Object.create(r.prototype),r)v[L]=r[L];v.prototype.newGraphManager=function(){var t=new o(this);return this.graphManager=t,t},v.prototype.newGraph=function(t){return new i(null,this.graphManager,t)},v.prototype.newNode=function(t){return new a(this.graphManager,t)},v.prototype.newEdge=function(t){return new s(null,null,t)},v.prototype.initParameters=function(){r.prototype.initParameters.call(this,arguments),this.isSubLayout||(h.DEFAULT_EDGE_LENGTH<10?this.idealEdgeLength=10:this.idealEdgeLength=h.DEFAULT_EDGE_LENGTH,this.useSmartIdealEdgeLengthCalculation=h.DEFAULT_USE_SMART_IDEAL_EDGE_LENGTH_CALCULATION,this.springConstant=g.DEFAULT_SPRING_STRENGTH,this.repulsionConstant=g.DEFAULT_REPULSION_STRENGTH,this.gravityConstant=g.DEFAULT_GRAVITY_STRENGTH,this.compoundGravityConstant=g.DEFAULT_COMPOUND_GRAVITY_STRENGTH,this.gravityRangeFactor=g.DEFAULT_GRAVITY_RANGE_FACTOR,this.compoundGravityRangeFactor=g.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR)},v.prototype.layout=function(){var t=l.DEFAULT_CREATE_BENDS_AS_NEEDED;return t&&(this.createBendpoints(),this.graphManager.resetAllEdges()),this.level=0,this.classicLayout()},v.prototype.classicLayout=function(){if(this.calculateNodesToApplyGravitationTo(),this.graphManager.calcLowestCommonAncestors(),this.graphManager.calcInclusionTreeDepths(),this.graphManager.getRoot().calcEstimatedSize(),this.calcIdealEdgeLengths(),!this.incremental){var t=this.getFlatForest();t.length>0?this.positionNodesRadially(t):this.positionNodesRandomly()}return this.initSpringEmbedder(),this.runSpringEmbedder(),!0},v.prototype.tick=function(){if(this.totalIterations++,this.totalIterations===this.maxIterations)return!0;if(this.totalIterations%g.CONVERGENCE_CHECK_PERIOD==0){if(this.isConverged())return!0;this.coolingFactor=this.initialCoolingFactor*((this.maxIterations-this.totalIterations)/this.maxIterations),this.animationPeriod=Math.ceil(this.initialAnimationPeriod*Math.sqrt(this.coolingFactor))}return this.totalDisplacement=0,this.graphManager.updateBounds(),this.calcSpringForces(),this.calcRepulsionForces(),this.calcGravitationalForces(),this.moveNodes(),this.animate(),!1},v.prototype.getPositionsData=function(){for(var t=this.graphManager.getAllNodes(),e={},n=0;n<t.length;n++){var r=t[n].rect,o=t[n].id;e[o]={id:o,x:r.getCenterX(),y:r.getCenterY(),w:r.width,h:r.height}}return e},v.prototype.runSpringEmbedder=function(){this.initialAnimationPeriod=25,this.animationPeriod=this.initialAnimationPeriod;var t=!1;if("during"===g.ANIMATE)this.emit("layoutstarted");else{for(;!t;)t=this.tick();this.graphManager.updateBounds()}},v.prototype.calculateNodesToApplyGravitationTo=function(){var t,e,n=[],r=this.graphManager.getGraphs(),o=r.length;for(e=0;e<o;e++)(t=r[e]).updateConnected(),t.isConnected||(n=n.concat(t.getNodes()));this.graphManager.setAllNodesToApplyGravitation(n)},v.prototype.createBendpoints=function(){var t=[];t=t.concat(this.graphManager.getAllEdges());var e,n=new HashSet;for(e=0;e<t.length;e++){var r=t[e];if(!n.contains(r)){var o=r.getSource(),i=r.getTarget();if(o==i)r.getBendpoints().push(new u),r.getBendpoints().push(new u),this.createDummyNodesForBendpoints(r),n.add(r);else{var a=[];if(a=(a=a.concat(o.getEdgeListToNode(i))).concat(i.getEdgeListToNode(o)),!n.contains(a[0])){var s;if(a.length>1)for(s=0;s<a.length;s++){var h=a[s];h.getBendpoints().push(new u),this.createDummyNodesForBendpoints(h)}n.addAll(list)}}}if(n.size()==t.length)break}},v.prototype.positionNodesRadially=function(t){for(var e=new c(0,0),n=Math.ceil(Math.sqrt(t.length)),r=0,o=0,i=0,a=new u(0,0),s=0;s<t.length;s++){s%n==0&&(i=0,o=r,0!=s&&(o+=h.DEFAULT_COMPONENT_SEPERATION),r=0);var g=t[s],d=p.findCenterOfTree(g);e.x=i,e.y=o,(a=v.radialLayout(g,d,e)).y>r&&(r=Math.floor(a.y)),i=Math.floor(a.x+h.DEFAULT_COMPONENT_SEPERATION)}this.transform(new u(l.WORLD_CENTER_X-a.x/2,l.WORLD_CENTER_Y-a.y/2))},v.radialLayout=function(t,e,n){var r=Math.max(this.maxDiagonalInTree(t),h.DEFAULT_RADIAL_SEPARATION);v.branchRadialLayout(e,null,0,359,0,r);var o=y.calculateBounds(t),i=new E;i.setDeviceOrgX(o.getMinX()),i.setDeviceOrgY(o.getMinY()),i.setWorldOrgX(n.x),i.setWorldOrgY(n.y);for(var a=0;a<t.length;a++){var s=t[a];s.transform(i)}var g=new u(o.getMaxX(),o.getMaxY());return i.inverseTransformPoint(g)},v.branchRadialLayout=function(t,e,n,r,o,i){var a=(r-n+1)/2;a<0&&(a+=180);var s=(a+n)%360,h=s*f.TWO_PI/360,g=(Math.cos(h),o*Math.cos(h)),l=o*Math.sin(h);t.setCenter(g,l);var c=[],u=(c=c.concat(t.getEdges())).length;null!=e&&u--;for(var p,d=0,y=c.length,E=t.getEdgesBetween(e);E.length>1;){var L=E[0];E.splice(0,1);var m=c.indexOf(L);m>=0&&c.splice(m,1),y--,u--}p=null!=e?(c.indexOf(E[0])+1)%y:0;for(var T=Math.abs(r-n)/u,A=p;d!=u;A=++A%y){var N=c[A].getOtherEnd(t);if(N!=e){var D=(n+d*T)%360,_=(D+T)%360;v.branchRadialLayout(N,t,D,_,o+i,i),d++}}},v.maxDiagonalInTree=function(t){for(var e=d.MIN_VALUE,n=0;n<t.length;n++){var r=t[n],o=r.getDiagonal();o>e&&(e=o)}return e},v.prototype.calcRepulsionRange=function(){return 2*(this.level+1)*this.idealEdgeLength},e.exports=v},{"./CoSEConstants":1,"./CoSEEdge":2,"./CoSEGraph":3,"./CoSEGraphManager":4,"./CoSENode":6,"./FDLayout":9,"./FDLayoutConstants":10,"./IGeometry":15,"./Integer":17,"./LGraph":19,"./Layout":23,"./LayoutConstants":24,"./Point":25,"./PointD":26,"./Transform":30}],6:[function(t,e,n){var r=t("./FDLayoutNode"),o=t("./IMath");function i(t,e,n,o){r.call(this,t,e,n,o)}for(var a in i.prototype=Object.create(r.prototype),r)i[a]=r[a];i.prototype.move=function(){var t=this.graphManager.getLayout();this.displacementX=t.coolingFactor*(this.springForceX+this.repulsionForceX+this.gravitationForceX),this.displacementY=t.coolingFactor*(this.springForceY+this.repulsionForceY+this.gravitationForceY),Math.abs(this.displacementX)>t.coolingFactor*t.maxNodeDisplacement&&(this.displacementX=t.coolingFactor*t.maxNodeDisplacement*o.sign(this.displacementX)),Math.abs(this.displacementY)>t.coolingFactor*t.maxNodeDisplacement&&(this.displacementY=t.coolingFactor*t.maxNodeDisplacement*o.sign(this.displacementY)),null==this.child?this.moveBy(this.displacementX,this.displacementY):0==this.child.getNodes().length?this.moveBy(this.displacementX,this.displacementY):this.propogateDisplacementToChildren(this.displacementX,this.displacementY),t.totalDisplacement+=Math.abs(this.displacementX)+Math.abs(this.displacementY),this.springForceX=0,this.springForceY=0,this.repulsionForceX=0,this.repulsionForceY=0,this.gravitationForceX=0,this.gravitationForceY=0,this.displacementX=0,this.displacementY=0},i.prototype.propogateDisplacementToChildren=function(t,e){for(var n,r=this.getChild().getNodes(),o=0;o<r.length;o++)null==(n=r[o]).getChild()?(n.moveBy(t,e),n.displacementX+=t,n.displacementY+=e):n.propogateDisplacementToChildren(t,e)},i.prototype.setPred1=function(t){this.pred1=t},i.prototype.getPred1=function(){return pred1},i.prototype.getPred2=function(){return pred2},i.prototype.setNext=function(t){this.next=t},i.prototype.getNext=function(){return next},i.prototype.setProcessed=function(t){this.processed=t},i.prototype.isProcessed=function(){return processed},e.exports=i},{"./FDLayoutNode":12,"./IMath":16}],7:[function(t,e,n){function r(t,e){this.width=0,this.height=0,null!==t&&null!==e&&(this.height=e,this.width=t)}r.prototype.getWidth=function(){return this.width},r.prototype.setWidth=function(t){this.width=t},r.prototype.getHeight=function(){return this.height},r.prototype.setHeight=function(t){this.height=t},e.exports=r},{}],8:[function(t,e,n){function r(){this.listeners=[]}var o=r.prototype;o.addListener=function(t,e){this.listeners.push({event:t,callback:e})},o.removeListener=function(t,e){for(var n=this.listeners.length;n>=0;n--){var r=this.listeners[n];r.event===t&&r.callback===e&&this.listeners.splice(n,1)}},o.emit=function(t,e){for(var n=0;n<this.listeners.length;n++){var r=this.listeners[n];t===r.event&&r.callback(e)}},e.exports=r},{}],9:[function(t,e,n){var r=t("./Layout"),o=t("./FDLayoutConstants"),i=t("./LayoutConstants"),a=t("./IGeometry"),s=t("./IMath");function h(){r.call(this),this.useSmartIdealEdgeLengthCalculation=o.DEFAULT_USE_SMART_IDEAL_EDGE_LENGTH_CALCULATION,this.idealEdgeLength=o.DEFAULT_EDGE_LENGTH,this.springConstant=o.DEFAULT_SPRING_STRENGTH,this.repulsionConstant=o.DEFAULT_REPULSION_STRENGTH,this.gravityConstant=o.DEFAULT_GRAVITY_STRENGTH,this.compoundGravityConstant=o.DEFAULT_COMPOUND_GRAVITY_STRENGTH,this.gravityRangeFactor=o.DEFAULT_GRAVITY_RANGE_FACTOR,this.compoundGravityRangeFactor=o.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR,this.displacementThresholdPerNode=3*o.DEFAULT_EDGE_LENGTH/100,this.coolingFactor=1,this.initialCoolingFactor=1,this.totalDisplacement=0,this.oldTotalDisplacement=0,this.maxIterations=o.MAX_ITERATIONS}for(var g in h.prototype=Object.create(r.prototype),r)h[g]=r[g];h.prototype.initParameters=function(){r.prototype.initParameters.call(this,arguments),this.layoutQuality==i.DRAFT_QUALITY?(this.displacementThresholdPerNode+=.3,this.maxIterations*=.8):this.layoutQuality==i.PROOF_QUALITY&&(this.displacementThresholdPerNode-=.3,this.maxIterations*=1.2),this.totalIterations=0,this.notAnimatedIterations=0},h.prototype.calcIdealEdgeLengths=function(){for(var t,e,n,r,a,s,h=this.getGraphManager().getAllEdges(),g=0;g<h.length;g++)(t=h[g]).idealLength=this.idealEdgeLength,t.isInterGraph&&(n=t.getSource(),r=t.getTarget(),a=t.getSourceInLca().getEstimatedSize(),s=t.getTargetInLca().getEstimatedSize(),this.useSmartIdealEdgeLengthCalculation&&(t.idealLength+=a+s-2*i.SIMPLE_NODE_SIZE),e=t.getLca().getInclusionTreeDepth(),t.idealLength+=o.DEFAULT_EDGE_LENGTH*o.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR*(n.getInclusionTreeDepth()+r.getInclusionTreeDepth()-2*e))},h.prototype.initSpringEmbedder=function(){this.incremental?(this.coolingFactor=.8,this.initialCoolingFactor=.8,this.maxNodeDisplacement=o.MAX_NODE_DISPLACEMENT_INCREMENTAL):(this.coolingFactor=1,this.initialCoolingFactor=1,this.maxNodeDisplacement=o.MAX_NODE_DISPLACEMENT),this.maxIterations=Math.max(5*this.getAllNodes().length,this.maxIterations),this.totalDisplacementThreshold=this.displacementThresholdPerNode*this.getAllNodes().length,this.repulsionRange=this.calcRepulsionRange()},h.prototype.calcSpringForces=function(){for(var t,e=this.getAllEdges(),n=0;n<e.length;n++)t=e[n],this.calcSpringForce(t,t.idealLength)},h.prototype.calcRepulsionForces=function(){var t,e,n,r,o=this.getAllNodes();for(t=0;t<o.length;t++)for(n=o[t],e=t+1;e<o.length;e++)r=o[e],n.getOwner()==r.getOwner()&&this.calcRepulsionForce(n,r)},h.prototype.calcGravitationalForces=function(){for(var t,e=this.getAllNodesToApplyGravitation(),n=0;n<e.length;n++)t=e[n],this.calcGravitationalForce(t)},h.prototype.moveNodes=function(){for(var t=this.getAllNodes(),e=0;e<t.length;e++)t[e].move()},h.prototype.calcSpringForce=function(t,e){var n,r,o,i,a=t.getSource(),s=t.getTarget();if(this.uniformLeafNodeSizes&&null==a.getChild()&&null==s.getChild())t.updateLengthSimple();else if(t.updateLength(),t.isOverlapingSourceAndTarget)return;n=t.getLength(),r=this.springConstant*(n-e),o=r*(t.lengthX/n),i=r*(t.lengthY/n),a.springForceX+=o,a.springForceY+=i,s.springForceX-=o,s.springForceY-=i},h.prototype.calcRepulsionForce=function(t,e){var n,r,i,h,g,l,c,u=t.getRect(),p=e.getRect(),d=new Array(2),f=new Array(4);u.intersects(p)?(a.calcSeparationAmount(u,p,d,o.DEFAULT_EDGE_LENGTH/2),l=d[0],c=d[1]):(this.uniformLeafNodeSizes&&null==t.getChild()&&null==e.getChild()?(n=p.getCenterX()-u.getCenterX(),r=p.getCenterY()-u.getCenterY()):(a.getIntersection(u,p,f),n=f[2]-f[0],r=f[3]-f[1]),Math.abs(n)<o.MIN_REPULSION_DIST&&(n=s.sign(n)*o.MIN_REPULSION_DIST),Math.abs(r)<o.MIN_REPULSION_DIST&&(r=s.sign(r)*o.MIN_REPULSION_DIST),i=n*n+r*r,h=Math.sqrt(i),g=this.repulsionConstant/i,l=g*n/h,c=g*r/h),t.repulsionForceX-=l,t.repulsionForceY-=c,e.repulsionForceX+=l,e.repulsionForceY+=c},h.prototype.calcGravitationalForce=function(t){var e,n,r,o,i,a,s,h;e=t.getOwner(),n=(e.getRight()+e.getLeft())/2,r=(e.getTop()+e.getBottom())/2,o=t.getCenterX()-n,i=t.getCenterY()-r,a=Math.abs(o),s=Math.abs(i),t.getOwner()==this.graphManager.getRoot()?(Math.floor(80),h=Math.floor(e.getEstimatedSize()*this.gravityRangeFactor),(a>h||s>h)&&(t.gravitationForceX=-this.gravityConstant*o,t.gravitationForceY=-this.gravityConstant*i)):(h=Math.floor(e.getEstimatedSize()*this.compoundGravityRangeFactor),(a>h||s>h)&&(t.gravitationForceX=-this.gravityConstant*o*this.compoundGravityConstant,t.gravitationForceY=-this.gravityConstant*i*this.compoundGravityConstant))},h.prototype.isConverged=function(){var t,e=!1;return this.totalIterations>this.maxIterations/3&&(e=Math.abs(this.totalDisplacement-this.oldTotalDisplacement)<2),t=this.totalDisplacement<this.totalDisplacementThreshold,this.oldTotalDisplacement=this.totalDisplacement,t||e},h.prototype.animate=function(){this.animationDuringLayout&&!this.isSubLayout&&(this.notAnimatedIterations==this.animationPeriod?(this.update(),this.notAnimatedIterations=0):this.notAnimatedIterations++)},h.prototype.calcRepulsionRange=function(){return 0},e.exports=h},{"./FDLayoutConstants":10,"./IGeometry":15,"./IMath":16,"./Layout":23,"./LayoutConstants":24}],10:[function(t,e,n){var r=t("./LayoutConstants");function o(){}for(var i in r)o[i]=r[i];o.MAX_ITERATIONS=2500,o.DEFAULT_EDGE_LENGTH=50,o.DEFAULT_SPRING_STRENGTH=.45,o.DEFAULT_REPULSION_STRENGTH=4500,o.DEFAULT_GRAVITY_STRENGTH=.4,o.DEFAULT_COMPOUND_GRAVITY_STRENGTH=1,o.DEFAULT_GRAVITY_RANGE_FACTOR=3.8,o.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR=1.5,o.DEFAULT_USE_SMART_IDEAL_EDGE_LENGTH_CALCULATION=!0,o.DEFAULT_USE_SMART_REPULSION_RANGE_CALCULATION=!0,o.MAX_NODE_DISPLACEMENT_INCREMENTAL=100,o.MAX_NODE_DISPLACEMENT=3*o.MAX_NODE_DISPLACEMENT_INCREMENTAL,o.MIN_REPULSION_DIST=o.DEFAULT_EDGE_LENGTH/10,o.CONVERGENCE_CHECK_PERIOD=100,o.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR=.1,o.MIN_EDGE_LENGTH=1,o.GRID_CALCULATION_CHECK_PERIOD=10,e.exports=o},{"./LayoutConstants":24}],11:[function(t,e,n){var r=t("./LEdge"),o=t("./FDLayoutConstants");function i(t,e,n){r.call(this,t,e,n),this.idealLength=o.DEFAULT_EDGE_LENGTH}for(var a in i.prototype=Object.create(r.prototype),r)i[a]=r[a];e.exports=i},{"./FDLayoutConstants":10,"./LEdge":18}],12:[function(t,e,n){var r=t("./LNode");function o(t,e,n,o){r.call(this,t,e,n,o),this.springForceX=0,this.springForceY=0,this.repulsionForceX=0,this.repulsionForceY=0,this.gravitationForceX=0,this.gravitationForceY=0,this.displacementX=0,this.displacementY=0,this.startX=0,this.finishX=0,this.startY=0,this.finishY=0,this.surrounding=[]}for(var i in o.prototype=Object.create(r.prototype),r)o[i]=r[i];o.prototype.setGridCoordinates=function(t,e,n,r){this.startX=t,this.finishX=e,this.startY=n,this.finishY=r},e.exports=o},{"./LNode":22}],13:[function(t,e,n){var r=t("./UniqueIDGeneretor");function o(){this.map={},this.keys=[]}o.prototype.put=function(t,e){var n=r.createID(t);this.contains(n)||(this.map[n]=e,this.keys.push(t))},o.prototype.contains=function(t){return r.createID(t),null!=this.map[t]},o.prototype.get=function(t){var e=r.createID(t);return this.map[e]},o.prototype.keySet=function(){return this.keys},e.exports=o},{"./UniqueIDGeneretor":31}],14:[function(t,e,n){var r=t("./UniqueIDGeneretor");function o(){this.set={}}o.prototype.add=function(t){var e=r.createID(t);this.contains(e)||(this.set[e]=t)},o.prototype.remove=function(t){delete this.set[r.createID(t)]},o.prototype.clear=function(){this.set={}},o.prototype.contains=function(t){return this.set[r.createID(t)]==t},o.prototype.isEmpty=function(){return 0===this.size()},o.prototype.size=function(){return Object.keys(this.set).length},o.prototype.addAllTo=function(t){for(var e=Object.keys(this.set),n=e.length,r=0;r<n;r++)t.push(this.set[e[r]])},o.prototype.size=function(){return Object.keys(this.set).length},o.prototype.addAll=function(t){for(var e=t.length,n=0;n<e;n++){var r=t[n];this.add(r)}},e.exports=o},{"./UniqueIDGeneretor":31}],15:[function(t,e,n){function r(){}r.calcSeparationAmount=function(t,e,n,o){if(!t.intersects(e))throw"assert failed";var i=new Array(2);r.decideDirectionsForOverlappingNodes(t,e,i),n[0]=Math.min(t.getRight(),e.getRight())-Math.max(t.x,e.x),n[1]=Math.min(t.getBottom(),e.getBottom())-Math.max(t.y,e.y),t.getX()<=e.getX()&&t.getRight()>=e.getRight()?n[0]+=Math.min(e.getX()-t.getX(),t.getRight()-e.getRight()):e.getX()<=t.getX()&&e.getRight()>=t.getRight()&&(n[0]+=Math.min(t.getX()-e.getX(),e.getRight()-t.getRight())),t.getY()<=e.getY()&&t.getBottom()>=e.getBottom()?n[1]+=Math.min(e.getY()-t.getY(),t.getBottom()-e.getBottom()):e.getY()<=t.getY()&&e.getBottom()>=t.getBottom()&&(n[1]+=Math.min(t.getY()-e.getY(),e.getBottom()-t.getBottom()));var a=Math.abs((e.getCenterY()-t.getCenterY())/(e.getCenterX()-t.getCenterX()));e.getCenterY()==t.getCenterY()&&e.getCenterX()==t.getCenterX()&&(a=1);var s=a*n[0],h=n[1]/a;n[0]<h?h=n[0]:s=n[1],n[0]=-1*i[0]*(h/2+o),n[1]=-1*i[1]*(s/2+o)},r.decideDirectionsForOverlappingNodes=function(t,e,n){t.getCenterX()<e.getCenterX()?n[0]=-1:n[0]=1,t.getCenterY()<e.getCenterY()?n[1]=-1:n[1]=1},r.getIntersection2=function(t,e,n){var o=t.getCenterX(),i=t.getCenterY(),a=e.getCenterX(),s=e.getCenterY();if(t.intersects(e))return n[0]=o,n[1]=i,n[2]=a,n[3]=s,!0;var h=t.getX(),g=t.getY(),l=t.getRight(),c=t.getX(),u=t.getBottom(),p=t.getRight(),d=t.getWidthHalf(),f=t.getHeightHalf(),y=e.getX(),E=e.getY(),v=e.getRight(),L=e.getX(),m=e.getBottom(),T=e.getRight(),A=e.getWidthHalf(),N=e.getHeightHalf(),D=!1,_=!1;if(o==a){if(i>s)return n[0]=o,n[1]=g,n[2]=a,n[3]=m,!1;if(i<s)return n[0]=o,n[1]=u,n[2]=a,n[3]=E,!1}else if(i==s){if(o>a)return n[0]=h,n[1]=i,n[2]=v,n[3]=s,!1;if(o<a)return n[0]=l,n[1]=i,n[2]=y,n[3]=s,!1}else{var w,O,I,R,M,C,G=t.height/t.width,F=e.height/e.width,x=(s-i)/(a-o);if(-G==x?o>a?(n[0]=c,n[1]=u,D=!0):(n[0]=l,n[1]=g,D=!0):G==x&&(o>a?(n[0]=h,n[1]=g,D=!0):(n[0]=p,n[1]=u,D=!0)),-F==x?a>o?(n[2]=L,n[3]=m,_=!0):(n[2]=v,n[3]=E,_=!0):F==x&&(a>o?(n[2]=y,n[3]=E,_=!0):(n[2]=T,n[3]=m,_=!0)),D&&_)return!1;if(o>a?i>s?(w=r.getCardinalDirection(G,x,4),O=r.getCardinalDirection(F,x,2)):(w=r.getCardinalDirection(-G,x,3),O=r.getCardinalDirection(-F,x,1)):i>s?(w=r.getCardinalDirection(-G,x,1),O=r.getCardinalDirection(-F,x,3)):(w=r.getCardinalDirection(G,x,2),O=r.getCardinalDirection(F,x,4)),!D)switch(w){case 1:R=g,I=o+-f/x,n[0]=I,n[1]=R;break;case 2:I=p,R=i+d*x,n[0]=I,n[1]=R;break;case 3:R=u,I=o+f/x,n[0]=I,n[1]=R;break;case 4:I=c,R=i+-d*x,n[0]=I,n[1]=R}if(!_)switch(O){case 1:C=E,M=a+-N/x,n[2]=M,n[3]=C;break;case 2:M=T,C=s+A*x,n[2]=M,n[3]=C;break;case 3:C=m,M=a+N/x,n[2]=M,n[3]=C;break;case 4:M=L,C=s+-A*x,n[2]=M,n[3]=C}}return!1},r.getCardinalDirection=function(t,e,n){return t>e?n:1+n%4},r.getIntersection=function(t,e,n,o){if(null==o)return r.getIntersection2(t,e,n);var i,a,s,h,g,l,c,u=t.x,p=t.y,d=e.x,f=e.y,y=n.x,E=n.y,v=o.x,L=o.y;return g=d*p-u*f,l=v*E-y*L,0==(c=(i=f-p)*(h=y-v)-(a=L-E)*(s=u-d))?null:new Point((s*l-h*g)/c,(a*g-i*l)/c)},r.HALF_PI=.5*Math.PI,r.ONE_AND_HALF_PI=1.5*Math.PI,r.TWO_PI=2*Math.PI,r.THREE_PI=3*Math.PI,e.exports=r},{}],16:[function(t,e,n){function r(){}r.sign=function(t){return t>0?1:t<0?-1:0},r.floor=function(t){return t<0?Math.ceil(t):Math.floor(t)},r.ceil=function(t){return t<0?Math.floor(t):Math.ceil(t)},e.exports=r},{}],17:[function(t,e,n){function r(){}r.MAX_VALUE=2147483647,r.MIN_VALUE=-2147483648,e.exports=r},{}],18:[function(t,e,n){var r=t("./LGraphObject"),o=t("./IGeometry"),i=t("./IMath");function a(t,e,n){r.call(this,n),this.isOverlapingSourceAndTarget=!1,this.vGraphObject=n,this.bendpoints=[],this.source=t,this.target=e}for(var s in a.prototype=Object.create(r.prototype),r)a[s]=r[s];a.prototype.getSource=function(){return this.source},a.prototype.getTarget=function(){return this.target},a.prototype.isInterGraph=function(){return this.isInterGraph},a.prototype.getLength=function(){return this.length},a.prototype.isOverlapingSourceAndTarget=function(){return this.isOverlapingSourceAndTarget},a.prototype.getBendpoints=function(){return this.bendpoints},a.prototype.getLca=function(){return this.lca},a.prototype.getSourceInLca=function(){return this.sourceInLca},a.prototype.getTargetInLca=function(){return this.targetInLca},a.prototype.getOtherEnd=function(t){if(this.source===t)return this.target;if(this.target===t)return this.source;throw"Node is not incident with this edge"},a.prototype.getOtherEndInGraph=function(t,e){for(var n=this.getOtherEnd(t),r=e.getGraphManager().getRoot();;){if(n.getOwner()==e)return n;if(n.getOwner()==r)break;n=n.getOwner().getParent()}return null},a.prototype.updateLength=function(){var t=new Array(4);this.isOverlapingSourceAndTarget=o.getIntersection(this.target.getRect(),this.source.getRect(),t),this.isOverlapingSourceAndTarget||(this.lengthX=t[0]-t[2],this.lengthY=t[1]-t[3],Math.abs(this.lengthX)<1&&(this.lengthX=i.sign(this.lengthX)),Math.abs(this.lengthY)<1&&(this.lengthY=i.sign(this.lengthY)),this.length=Math.sqrt(this.lengthX*this.lengthX+this.lengthY*this.lengthY))},a.prototype.updateLengthSimple=function(){this.lengthX=this.target.getCenterX()-this.source.getCenterX(),this.lengthY=this.target.getCenterY()-this.source.getCenterY(),Math.abs(this.lengthX)<1&&(this.lengthX=i.sign(this.lengthX)),Math.abs(this.lengthY)<1&&(this.lengthY=i.sign(this.lengthY)),this.length=Math.sqrt(this.lengthX*this.lengthX+this.lengthY*this.lengthY)},e.exports=a},{"./IGeometry":15,"./IMath":16,"./LGraphObject":21}],19:[function(t,e,n){var r=t("./LGraphObject"),o=t("./Integer"),i=t("./LayoutConstants"),a=t("./LGraphManager"),s=t("./LNode"),h=t("./HashSet"),g=t("./RectangleD"),l=t("./Point");function c(t,e,n){r.call(this,n),this.estimatedSize=o.MIN_VALUE,this.margin=i.DEFAULT_GRAPH_MARGIN,this.edges=[],this.nodes=[],this.isConnected=!1,this.parent=t,null!=e&&e instanceof a?this.graphManager=e:null!=e&&e instanceof Layout&&(this.graphManager=e.graphManager)}for(var u in c.prototype=Object.create(r.prototype),r)c[u]=r[u];c.prototype.getNodes=function(){return this.nodes},c.prototype.getEdges=function(){return this.edges},c.prototype.getGraphManager=function(){return this.graphManager},c.prototype.getParent=function(){return this.parent},c.prototype.getLeft=function(){return this.left},c.prototype.getRight=function(){return this.right},c.prototype.getTop=function(){return this.top},c.prototype.getBottom=function(){return this.bottom},c.prototype.isConnected=function(){return this.isConnected},c.prototype.add=function(t,e,n){if(null==e&&null==n){var r=t;if(null==this.graphManager)throw"Graph has no graph mgr!";if(this.getNodes().indexOf(r)>-1)throw"Node already in graph!";return r.owner=this,this.getNodes().push(r),r}var o=t;if(!(this.getNodes().indexOf(e)>-1&&this.getNodes().indexOf(n)>-1))throw"Source or target not in graph!";if(e.owner!=n.owner||e.owner!=this)throw"Both owners must be this graph!";return e.owner!=n.owner?null:(o.source=e,o.target=n,o.isInterGraph=!1,this.getEdges().push(o),e.edges.push(o),n!=e&&n.edges.push(o),o)},c.prototype.remove=function(t){var e=t;if(t instanceof s){if(null==e)throw"Node is null!";if(null==e.owner||e.owner!=this)throw"Owner graph is invalid!";if(null==this.graphManager)throw"Owner graph manager is invalid!";for(var n=e.edges.slice(),r=n.length,o=0;o<r;o++)(a=n[o]).isInterGraph?this.graphManager.remove(a):a.source.owner.remove(a);var i=this.nodes.indexOf(e);if(-1==i)throw"Node not in owner node list!";this.nodes.splice(i,1)}else if(t instanceof LEdge){var a=t;if(null==a)throw"Edge is null!";if(null==a.source||null==a.target)throw"Source and/or target is null!";if(null==a.source.owner||null==a.target.owner||a.source.owner!=this||a.target.owner!=this)throw"Source and/or target owner is invalid!";var h=a.source.edges.indexOf(a),g=a.target.edges.indexOf(a);if(!(h>-1&&g>-1))throw"Source and/or target doesn't know this edge!";a.source.edges.splice(h,1),a.target!=a.source&&a.target.edges.splice(g,1);var i=a.source.owner.getEdges().indexOf(a);if(-1==i)throw"Not in owner's edge list!";a.source.owner.getEdges().splice(i,1)}},c.prototype.updateLeftTop=function(){for(var t,e,n=o.MAX_VALUE,r=o.MAX_VALUE,i=this.getNodes(),a=i.length,s=0;s<a;s++){var h=i[s];t=Math.floor(h.getTop()),e=Math.floor(h.getLeft()),n>t&&(n=t),r>e&&(r=e)}return n==o.MAX_VALUE?null:(this.left=r-this.margin,this.top=n-this.margin,new l(this.left,this.top))},c.prototype.updateBounds=function(t){for(var e,n,r,i,a=o.MAX_VALUE,s=-o.MAX_VALUE,h=o.MAX_VALUE,l=-o.MAX_VALUE,c=this.nodes,u=c.length,p=0;p<u;p++){var d=c[p];t&&null!=d.child&&d.updateBounds(),e=Math.floor(d.getLeft()),n=Math.floor(d.getRight()),r=Math.floor(d.getTop()),i=Math.floor(d.getBottom()),a>e&&(a=e),s<n&&(s=n),h>r&&(h=r),l<i&&(l=i)}var f=new g(a,h,s-a,l-h);a==o.MAX_VALUE&&(this.left=Math.floor(this.parent.getLeft()),this.right=Math.floor(this.parent.getRight()),this.top=Math.floor(this.parent.getTop()),this.bottom=Math.floor(this.parent.getBottom())),this.left=f.x-this.margin,this.right=f.x+f.width+this.margin,this.top=f.y-this.margin,this.bottom=f.y+f.height+this.margin},c.calculateBounds=function(t){for(var e,n,r,i,a=o.MAX_VALUE,s=-o.MAX_VALUE,h=o.MAX_VALUE,l=-o.MAX_VALUE,c=t.length,u=0;u<c;u++){var p=t[u];e=Math.floor(p.getLeft()),n=Math.floor(p.getRight()),r=Math.floor(p.getTop()),i=Math.floor(p.getBottom()),a>e&&(a=e),s<n&&(s=n),h>r&&(h=r),l<i&&(l=i)}var d=new g(a,h,s-a,l-h);return d},c.prototype.getInclusionTreeDepth=function(){return this==this.graphManager.getRoot()?1:this.parent.getInclusionTreeDepth()},c.prototype.getEstimatedSize=function(){if(this.estimatedSize==o.MIN_VALUE)throw"assert failed";return this.estimatedSize},c.prototype.calcEstimatedSize=function(){for(var t=0,e=this.nodes,n=e.length,r=0;r<n;r++){var o=e[r];t+=o.calcEstimatedSize()}return this.estimatedSize=0==t?i.EMPTY_COMPOUND_NODE_SIZE:Math.floor(t/Math.sqrt(this.nodes.length)),Math.floor(this.estimatedSize)},c.prototype.updateConnected=function(){if(0!=this.nodes.length){var t,e,n=[],r=new h,o=this.nodes[0];for(n=n.concat(o.withChildren());n.length>0;){o=n.shift(),r.add(o);for(var i=(t=o.getEdges()).length,a=0;a<i;a++){var s=t[a];null==(e=s.getOtherEndInGraph(o,this))||r.contains(e)||(n=n.concat(e.withChildren()))}}if(this.isConnected=!1,r.size()>=this.nodes.length){var g=0,i=r.size();for(var l in r.set){var c=r.set[l];c.owner==this&&g++}g==this.nodes.length&&(this.isConnected=!0)}}else this.isConnected=!0},e.exports=c},{"./HashSet":14,"./Integer":17,"./LGraphManager":20,"./LGraphObject":21,"./LNode":22,"./LayoutConstants":24,"./Point":25,"./RectangleD":28}],20:[function(t,e,n){function r(t){this.layout=t,this.graphs=[],this.edges=[]}r.prototype.addRoot=function(){var t=this.layout.newGraph(),e=this.layout.newNode(null),n=this.add(t,e);return this.setRootGraph(n),this.rootGraph},r.prototype.add=function(t,e,n,r,o){if(null==n&&null==r&&null==o){if(null==t)throw"Graph is null!";if(null==e)throw"Parent node is null!";if(this.graphs.indexOf(t)>-1)throw"Graph already in this graph mgr!";if(this.graphs.push(t),null!=t.parent)throw"Already has a parent!";if(null!=e.child)throw"Already has a child!";return t.parent=e,e.child=t,t}o=n,n=t;var i=(r=e).getOwner(),a=o.getOwner();if(null==i||i.getGraphManager()!=this)throw"Source not in this graph mgr!";if(null==a||a.getGraphManager()!=this)throw"Target not in this graph mgr!";if(i==a)return n.isInterGraph=!1,i.add(n,r,o);if(n.isInterGraph=!0,n.source=r,n.target=o,this.edges.indexOf(n)>-1)throw"Edge already in inter-graph edge list!";if(this.edges.push(n),null==n.source||null==n.target)throw"Edge source and/or target is null!";if(-1!=n.source.edges.indexOf(n)||-1!=n.target.edges.indexOf(n))throw"Edge already in source and/or target incidency list!";return n.source.edges.push(n),n.target.edges.push(n),n},r.prototype.remove=function(t){if(t instanceof LGraph){var e=t;if(e.getGraphManager()!=this)throw"Graph not in this graph mgr";if(e!=this.rootGraph&&(null==e.parent||e.parent.graphManager!=this))throw"Invalid parent node!";for(var n,r=[],o=(r=r.concat(e.getEdges())).length,i=0;i<o;i++)n=r[i],e.remove(n);var a,s=[];s=s.concat(e.getNodes()),o=s.length;for(var i=0;i<o;i++)a=s[i],e.remove(a);e==this.rootGraph&&this.setRootGraph(null);var h=this.graphs.indexOf(e);this.graphs.splice(h,1),e.parent=null}else if(t instanceof LEdge){if(null==(n=t))throw"Edge is null!";if(!n.isInterGraph)throw"Not an inter-graph edge!";if(null==n.source||null==n.target)throw"Source and/or target is null!";if(-1==n.source.edges.indexOf(n)||-1==n.target.edges.indexOf(n))throw"Source and/or target doesn't know this edge!";var h=n.source.edges.indexOf(n);if(n.source.edges.splice(h,1),h=n.target.edges.indexOf(n),n.target.edges.splice(h,1),null==n.source.owner||null==n.source.owner.getGraphManager())throw"Edge owner graph or owner graph manager is null!";if(-1==n.source.owner.getGraphManager().edges.indexOf(n))throw"Not in owner graph manager's edge list!";var h=n.source.owner.getGraphManager().edges.indexOf(n);n.source.owner.getGraphManager().edges.splice(h,1)}},r.prototype.updateBounds=function(){this.rootGraph.updateBounds(!0)},r.prototype.getGraphs=function(){return this.graphs},r.prototype.getAllNodes=function(){if(null==this.allNodes){for(var t=[],e=this.getGraphs(),n=e.length,r=0;r<n;r++)t=t.concat(e[r].getNodes());this.allNodes=t}return this.allNodes},r.prototype.resetAllNodes=function(){this.allNodes=null},r.prototype.resetAllEdges=function(){this.allEdges=null},r.prototype.resetAllNodesToApplyGravitation=function(){this.allNodesToApplyGravitation=null},r.prototype.getAllEdges=function(){if(null==this.allEdges){for(var t=[],e=this.getGraphs(),n=(e.length,0);n<e.length;n++)t=t.concat(e[n].getEdges());t=t.concat(this.edges),this.allEdges=t}return this.allEdges},r.prototype.getAllNodesToApplyGravitation=function(){return this.allNodesToApplyGravitation},r.prototype.setAllNodesToApplyGravitation=function(t){if(null!=this.allNodesToApplyGravitation)throw"assert failed";this.allNodesToApplyGravitation=t},r.prototype.getRoot=function(){return this.rootGraph},r.prototype.setRootGraph=function(t){if(t.getGraphManager()!=this)throw"Root not in this graph mgr!";this.rootGraph=t,null==t.parent&&(t.parent=this.layout.newNode("Root node"))},r.prototype.getLayout=function(){return this.layout},r.prototype.isOneAncestorOfOther=function(t,e){if(null==t||null==e)throw"assert failed";if(t==e)return!0;for(var n,r=t.getOwner();null!=(n=r.getParent());){if(n==e)return!0;if(null==(r=n.getOwner()))break}for(r=e.getOwner();null!=(n=r.getParent());){if(n==t)return!0;if(null==(r=n.getOwner()))break}return!1},r.prototype.calcLowestCommonAncestors=function(){for(var t,e,n,r,o,i=this.getAllEdges(),a=i.length,s=0;s<a;s++)if(t=i[s],e=t.source,n=t.target,t.lca=null,t.sourceInLca=e,t.targetInLca=n,e!=n){for(r=e.getOwner();null==t.lca;){for(o=n.getOwner();null==t.lca;){if(o==r){t.lca=o;break}if(o==this.rootGraph)break;if(null!=t.lca)throw"assert failed";t.targetInLca=o.getParent(),o=t.targetInLca.getOwner()}if(r==this.rootGraph)break;null==t.lca&&(t.sourceInLca=r.getParent(),r=t.sourceInLca.getOwner())}if(null==t.lca)throw"assert failed"}else t.lca=e.getOwner()},r.prototype.calcLowestCommonAncestor=function(t,e){if(t==e)return t.getOwner();for(var n=t.getOwner();null!=n;){for(var r=e.getOwner();null!=r;){if(r==n)return r;r=r.getParent().getOwner()}n=n.getParent().getOwner()}return n},r.prototype.calcInclusionTreeDepths=function(t,e){var n;null==t&&null==e&&(t=this.rootGraph,e=1);for(var r=t.getNodes(),o=r.length,i=0;i<o;i++)(n=r[i]).inclusionTreeDepth=e,null!=n.child&&this.calcInclusionTreeDepths(n.child,e+1)},r.prototype.includesInvalidEdge=function(){for(var t,e=this.edges.length,n=0;n<e;n++)if(t=this.edges[n],this.isOneAncestorOfOther(t.source,t.target))return!0;return!1},e.exports=r},{}],21:[function(t,e,n){e.exports=function(t){this.vGraphObject=t}},{}],22:[function(t,e,n){var r=t("./LGraphObject"),o=t("./Integer"),i=t("./RectangleD"),a=t("./LayoutConstants"),s=t("./RandomSeed"),h=t("./PointD"),g=t("./HashSet");function l(t,e,n,a){null==n&&null==a&&(a=e),r.call(this,a),null!=t.graphManager&&(t=t.graphManager),this.estimatedSize=o.MIN_VALUE,this.inclusionTreeDepth=o.MAX_VALUE,this.vGraphObject=a,this.edges=[],this.graphManager=t,this.rect=null!=n&&null!=e?new i(e.x,e.y,n.width,n.height):new i}for(var c in l.prototype=Object.create(r.prototype),r)l[c]=r[c];l.prototype.getEdges=function(){return this.edges},l.prototype.getChild=function(){return this.child},l.prototype.getOwner=function(){if(null!=this.owner&&!(null==this.owner||this.owner.getNodes().indexOf(this)>-1))throw"assert failed";return this.owner},l.prototype.getWidth=function(){return this.rect.width},l.prototype.setWidth=function(t){this.rect.width=t},l.prototype.getHeight=function(){return this.rect.height},l.prototype.setHeight=function(t){this.rect.height=t},l.prototype.getCenterX=function(){return this.rect.x+this.rect.width/2},l.prototype.getCenterY=function(){return this.rect.y+this.rect.height/2},l.prototype.getCenter=function(){return new h(this.rect.x+this.rect.width/2,this.rect.y+this.rect.height/2)},l.prototype.getLocation=function(){return new h(this.rect.x,this.rect.y)},l.prototype.getRect=function(){return this.rect},l.prototype.getDiagonal=function(){return Math.sqrt(this.rect.width*this.rect.width+this.rect.height*this.rect.height)},l.prototype.setRect=function(t,e){this.rect.x=t.x,this.rect.y=t.y,this.rect.width=e.width,this.rect.height=e.height},l.prototype.setCenter=function(t,e){this.rect.x=t-this.rect.width/2,this.rect.y=e-this.rect.height/2},l.prototype.setLocation=function(t,e){this.rect.x=t,this.rect.y=e},l.prototype.moveBy=function(t,e){this.rect.x+=t,this.rect.y+=e},l.prototype.getEdgeListToNode=function(t){var e,n=[];for(var r in this.edges)if((e=r).target==t){if(e.source!=this)throw"Incorrect edge source!";n.push(e)}return n},l.prototype.getEdgesBetween=function(t){var e,n=[];for(var r in this.edges){if((e=this.edges[r]).source!=this&&e.target!=this)throw"Incorrect edge source and/or target";e.target!=t&&e.source!=t||n.push(e)}return n},l.prototype.getNeighborsList=function(){var t,e=new g;for(var n in this.edges)if((t=this.edges[n]).source==this)e.add(t.target);else{if(!t.target==this)throw"Incorrect incidency!";e.add(t.source)}return e},l.prototype.withChildren=function(){var t,e=[];if(e.push(this),null!=this.child)for(var n=this.child.getNodes(),r=0;r<n.length;r++)t=n[r],e=e.concat(t.withChildren());return e},l.prototype.getEstimatedSize=function(){if(this.estimatedSize==o.MIN_VALUE)throw"assert failed";return this.estimatedSize},l.prototype.calcEstimatedSize=function(){return null==this.child?this.estimatedSize=Math.floor((this.rect.width+this.rect.height)/2):(this.estimatedSize=this.child.calcEstimatedSize(),this.rect.width=this.estimatedSize,this.rect.height=this.estimatedSize,this.estimatedSize)},l.prototype.scatter=function(){var t,e,n=-a.INITIAL_WORLD_BOUNDARY,r=a.INITIAL_WORLD_BOUNDARY;t=a.WORLD_CENTER_X+s.nextDouble()*(r-n)+n;var o=-a.INITIAL_WORLD_BOUNDARY,i=a.INITIAL_WORLD_BOUNDARY;e=a.WORLD_CENTER_Y+s.nextDouble()*(i-o)+o,this.rect.x=t,this.rect.y=e},l.prototype.updateBounds=function(){if(null==this.getChild())throw"assert failed";if(0!=this.getChild().getNodes().length){var t=this.getChild();t.updateBounds(!0),this.rect.x=t.getLeft(),this.rect.y=t.getTop(),this.setWidth(t.getRight()-t.getLeft()),this.setHeight(t.getBottom()-t.getTop())}},l.prototype.getInclusionTreeDepth=function(){if(this.inclusionTreeDepth==o.MAX_VALUE)throw"assert failed";return this.inclusionTreeDepth},l.prototype.transform=function(t){var e=this.rect.x;e>a.WORLD_BOUNDARY?e=a.WORLD_BOUNDARY:e<-a.WORLD_BOUNDARY&&(e=-a.WORLD_BOUNDARY);var n=this.rect.y;n>a.WORLD_BOUNDARY?n=a.WORLD_BOUNDARY:n<-a.WORLD_BOUNDARY&&(n=-a.WORLD_BOUNDARY);var r=new h(e,n),o=t.inverseTransformPoint(r);this.setLocation(o.x,o.y)},l.prototype.getLeft=function(){return this.rect.x},l.prototype.getRight=function(){return this.rect.x+this.rect.width},l.prototype.getTop=function(){return this.rect.y},l.prototype.getBottom=function(){return this.rect.y+this.rect.height},l.prototype.getParent=function(){return null==this.owner?null:this.owner.getParent()},e.exports=l},{"./HashSet":14,"./Integer":17,"./LGraphObject":21,"./LayoutConstants":24,"./PointD":26,"./RandomSeed":27,"./RectangleD":28}],23:[function(t,e,n){var r=t("./LayoutConstants"),o=t("./HashMap"),i=t("./LGraphManager"),a=t("./LNode"),s=t("./LEdge"),h=t("./LGraph"),g=t("./PointD"),l=t("./Transform"),c=t("./Emitter"),u=t("./HashSet");function p(t){c.call(this),this.layoutQuality=r.DEFAULT_QUALITY,this.createBendsAsNeeded=r.DEFAULT_CREATE_BENDS_AS_NEEDED,this.incremental=r.DEFAULT_INCREMENTAL,this.animationOnLayout=r.DEFAULT_ANIMATION_ON_LAYOUT,this.animationDuringLayout=r.DEFAULT_ANIMATION_DURING_LAYOUT,this.animationPeriod=r.DEFAULT_ANIMATION_PERIOD,this.uniformLeafNodeSizes=r.DEFAULT_UNIFORM_LEAF_NODE_SIZES,this.edgeToDummyNodes=new o,this.graphManager=new i(this),this.isLayoutFinished=!1,this.isSubLayout=!1,this.isRemoteUse=!1,null!=t&&(this.isRemoteUse=t)}p.RANDOM_SEED=1,p.prototype=Object.create(c.prototype),p.prototype.getGraphManager=function(){return this.graphManager},p.prototype.getAllNodes=function(){return this.graphManager.getAllNodes()},p.prototype.getAllEdges=function(){return this.graphManager.getAllEdges()},p.prototype.getAllNodesToApplyGravitation=function(){return this.graphManager.getAllNodesToApplyGravitation()},p.prototype.newGraphManager=function(){var t=new i(this);return this.graphManager=t,t},p.prototype.newGraph=function(t){return new h(null,this.graphManager,t)},p.prototype.newNode=function(t){return new a(this.graphManager,t)},p.prototype.newEdge=function(t){return new s(null,null,t)},p.prototype.runLayout=function(){var t;return this.isLayoutFinished=!1,this.initParameters(),null==this.graphManager.getRoot()||0==this.graphManager.getRoot().getNodes().length||this.graphManager.includesInvalidEdge()?t=!1:(this.isSubLayout||(new Date).getTime(),t=this.layout(),this.isSubLayout||(new Date).getTime()),t&&(this.isSubLayout||this.doPostLayout()),this.isLayoutFinished=!0,t},p.prototype.doPostLayout=function(){this.transform(),this.update()},p.prototype.update2=function(){if(this.createBendsAsNeeded&&(this.createBendpointsFromDummyNodes(),this.graphManager.resetAllEdges()),!this.isRemoteUse){for(var t=this.graphManager.getAllEdges(),e=0;e<t.length;e++)t[e];for(var n=this.graphManager.getRoot().getNodes(),e=0;e<n.length;e++)n[e];this.update(this.graphManager.getRoot())}},p.prototype.update=function(t){if(null==t)this.update2();else if(t instanceof a){var e=t;if(null!=e.getChild())for(var n=e.getChild().getNodes(),r=0;r<n.length;r++)update(n[r]);if(null!=e.vGraphObject){var o=e.vGraphObject;o.update(e)}}else if(t instanceof s){var i=t;if(null!=i.vGraphObject){var g=i.vGraphObject;g.update(i)}}else if(t instanceof h){var l=t;if(null!=l.vGraphObject){var c=l.vGraphObject;c.update(l)}}},p.prototype.initParameters=function(){this.isSubLayout||(this.layoutQuality=r.DEFAULT_QUALITY,this.animationDuringLayout=r.DEFAULT_ANIMATION_ON_LAYOUT,this.animationPeriod=r.DEFAULT_ANIMATION_PERIOD,this.animationOnLayout=r.DEFAULT_ANIMATION_DURING_LAYOUT,this.incremental=r.DEFAULT_INCREMENTAL,this.createBendsAsNeeded=r.DEFAULT_CREATE_BENDS_AS_NEEDED,this.uniformLeafNodeSizes=r.DEFAULT_UNIFORM_LEAF_NODE_SIZES),this.animationDuringLayout&&(animationOnLayout=!1)},p.prototype.transform=function(t){if(void 0==t)this.transform(new g(0,0));else{var e=new l,n=this.graphManager.getRoot().updateLeftTop();if(null!=n){e.setWorldOrgX(t.x),e.setWorldOrgY(t.y),e.setDeviceOrgX(n.x),e.setDeviceOrgY(n.y);for(var r=this.getAllNodes(),o=0;o<r.length;o++)r[o].transform(e)}}},p.prototype.positionNodesRandomly=function(t){if(void 0==t)this.positionNodesRandomly(this.getGraphManager().getRoot()),this.getGraphManager().getRoot().updateBounds(!0);else for(var e,n,r=t.getNodes(),o=0;o<r.length;o++)e=r[o],null==(n=e.getChild())?e.scatter():0==n.getNodes().length?e.scatter():(this.positionNodesRandomly(n),e.updateBounds())},p.prototype.getFlatForest=function(){for(var t=[],e=!0,n=this.graphManager.getRoot().getNodes(),r=!0,i=0;i<n.length;i++)null!=n[i].getChild()&&(r=!1);if(!r)return t;var a=new u,s=[],h=new o,g=[];for(g=g.concat(n);g.length>0&&e;){for(s.push(g[0]);s.length>0&&e;){var l=s[0];s.splice(0,1),a.add(l);for(var c=l.getEdges(),i=0;i<c.length;i++){var p=c[i].getOtherEnd(l);if(h.get(l)!=p){if(a.contains(p)){e=!1;break}s.push(p),h.put(p,l)}}}if(e){var d=[];a.addAllTo(d),t.push(d);for(var i=0;i<d.length;i++){var f=d[i],y=g.indexOf(f);y>-1&&g.splice(y,1)}a=new u,h=new o}else t=[]}return t},p.prototype.createDummyNodesForBendpoints=function(t){for(var e=[],n=t.source,r=this.graphManager.calcLowestCommonAncestor(t.source,t.target),o=0;o<t.bendpoints.length;o++){var i=this.newNode(null);i.setRect(new Point(0,0),new Dimension(1,1)),r.add(i);var a=this.newEdge(null);this.graphManager.add(a,n,i),e.add(i),n=i}var a=this.newEdge(null);return this.graphManager.add(a,n,t.target),this.edgeToDummyNodes.put(t,e),t.isInterGraph()?this.graphManager.remove(t):r.remove(t),e},p.prototype.createBendpointsFromDummyNodes=function(){var t=[];t=t.concat(this.graphManager.getAllEdges()),t=this.edgeToDummyNodes.keySet().concat(t);for(var e=0;e<t.length;e++){var n=t[e];if(n.bendpoints.length>0){for(var r=this.edgeToDummyNodes.get(n),o=0;o<r.length;o++){var i=r[o],a=new g(i.getCenterX(),i.getCenterY()),s=n.bendpoints.get(o);s.x=a.x,s.y=a.y,i.getOwner().remove(i)}this.graphManager.add(n,n.source,n.target)}}},p.transform=function(t,e,n,r){if(void 0!=n&&void 0!=r){var o=e;if(t<=50){var i=e/n;o-=(e-i)/50*(50-t)}else{var a=e*r;o+=(a-e)/50*(t-50)}return o}var s,h;return t<=50?(s=9*e/500,h=e/10):(s=9*e/50,h=-8*e),s*t+h},p.findCenterOfTree=function(t){var e=[];e=e.concat(t);var n=[],r=new o,i=!1,a=null;1!=e.length&&2!=e.length||(i=!0,a=e[0]);for(var s=0;s<e.length;s++){var h=e[s],g=h.getNeighborsList().size();r.put(h,h.getNeighborsList().size()),1==g&&n.push(h)}var l=[];for(l=l.concat(n);!i;){var c=[];c=c.concat(l),l=[];for(var s=0;s<e.length;s++){var h=e[s],u=e.indexOf(h);u>=0&&e.splice(u,1);var p=h.getNeighborsList();for(var d in p.set){var f=p.set[d];if(n.indexOf(f)<0){var y=r.get(f),E=y-1;1==E&&l.push(f),r.put(f,E)}}}n=n.concat(l),1!=e.length&&2!=e.length||(i=!0,a=e[0])}return a},p.prototype.setGraphManager=function(t){this.graphManager=t},e.exports=p},{"./Emitter":8,"./HashMap":13,"./HashSet":14,"./LEdge":18,"./LGraph":19,"./LGraphManager":20,"./LNode":22,"./LayoutConstants":24,"./PointD":26,"./Transform":30}],24:[function(t,e,n){function r(){}r.PROOF_QUALITY=0,r.DEFAULT_QUALITY=1,r.DRAFT_QUALITY=2,r.DEFAULT_CREATE_BENDS_AS_NEEDED=!1,r.DEFAULT_INCREMENTAL=!1,r.DEFAULT_ANIMATION_ON_LAYOUT=!0,r.DEFAULT_ANIMATION_DURING_LAYOUT=!1,r.DEFAULT_ANIMATION_PERIOD=50,r.DEFAULT_UNIFORM_LEAF_NODE_SIZES=!1,r.DEFAULT_GRAPH_MARGIN=15,r.SIMPLE_NODE_SIZE=40,r.SIMPLE_NODE_HALF_SIZE=r.SIMPLE_NODE_SIZE/2,r.EMPTY_COMPOUND_NODE_SIZE=40,r.MIN_EDGE_LENGTH=1,r.WORLD_BOUNDARY=1e6,r.INITIAL_WORLD_BOUNDARY=r.WORLD_BOUNDARY/1e3,r.WORLD_CENTER_X=1200,r.WORLD_CENTER_Y=900,e.exports=r},{}],25:[function(t,e,n){function r(t,e,n){this.x=null,this.y=null,null==t&&null==e&&null==n?(this.x=0,this.y=0):"number"==typeof t&&"number"==typeof e&&null==n?(this.x=t,this.y=e):"Point"==t.constructor.name&&null==e&&null==n&&(n=t,this.x=n.x,this.y=n.y)}r.prototype.getX=function(){return this.x},r.prototype.getY=function(){return this.y},r.prototype.getLocation=function(){return new r(this.x,this.y)},r.prototype.setLocation=function(t,e,n){"Point"==t.constructor.name&&null==e&&null==n?(n=t,this.setLocation(n.x,n.y)):"number"==typeof t&&"number"==typeof e&&null==n&&(parseInt(t)==t&&parseInt(e)==e?this.move(t,e):(this.x=Math.floor(t+.5),this.y=Math.floor(e+.5)))},r.prototype.move=function(t,e){this.x=t,this.y=e},r.prototype.translate=function(t,e){this.x+=t,this.y+=e},r.prototype.equals=function(t){if("Point"==t.constructor.name){var e=t;return this.x==e.x&&this.y==e.y}return this==t},r.prototype.toString=function(){return(new r).constructor.name+"[x="+this.x+",y="+this.y+"]"},e.exports=r},{}],26:[function(t,e,n){function r(t,e){null==t&&null==e?(this.x=0,this.y=0):(this.x=t,this.y=e)}r.prototype.getX=function(){return this.x},r.prototype.getY=function(){return this.y},r.prototype.setX=function(t){this.x=t},r.prototype.setY=function(t){this.y=t},r.prototype.getDifference=function(t){return new DimensionD(this.x-t.x,this.y-t.y)},r.prototype.getCopy=function(){return new r(this.x,this.y)},r.prototype.translate=function(t){return this.x+=t.width,this.y+=t.height,this},e.exports=r},{}],27:[function(t,e,n){function r(){}r.seed=1,r.x=0,r.nextDouble=function(){return r.x=1e4*Math.sin(r.seed++),r.x-Math.floor(r.x)},e.exports=r},{}],28:[function(t,e,n){function r(t,e,n,r){this.x=0,this.y=0,this.width=0,this.height=0,null!=t&&null!=e&&null!=n&&null!=r&&(this.x=t,this.y=e,this.width=n,this.height=r)}r.prototype.getX=function(){return this.x},r.prototype.setX=function(t){this.x=t},r.prototype.getY=function(){return this.y},r.prototype.setY=function(t){this.y=t},r.prototype.getWidth=function(){return this.width},r.prototype.setWidth=function(t){this.width=t},r.prototype.getHeight=function(){return this.height},r.prototype.setHeight=function(t){this.height=t},r.prototype.getRight=function(){return this.x+this.width},r.prototype.getBottom=function(){return this.y+this.height},r.prototype.intersects=function(t){return!(this.getRight()<t.x||this.getBottom()<t.y||t.getRight()<this.x||t.getBottom()<this.y)},r.prototype.getCenterX=function(){return this.x+this.width/2},r.prototype.getMinX=function(){return this.getX()},r.prototype.getMaxX=function(){return this.getX()+this.width},r.prototype.getCenterY=function(){return this.y+this.height/2},r.prototype.getMinY=function(){return this.getY()},r.prototype.getMaxY=function(){return this.getY()+this.height},r.prototype.getWidthHalf=function(){return this.width/2},r.prototype.getHeightHalf=function(){return this.height/2},e.exports=r},{}],29:[function(t,e,n){e.exports=function(t){t.toBeTiled={},t.getToBeTiled=function(e){var n=e.data("id");if(null!=t.toBeTiled[n])return t.toBeTiled[n];var r=e.children();if(null==r||0==r.length)return t.toBeTiled[n]=!1,!1;for(var o=0;o<r.length;o++){var i=r[o];if(t.getNodeDegree(i)>0)return t.toBeTiled[n]=!1,!1;if(null!=i.children()&&0!=i.children().length){if(!t.getToBeTiled(i))return t.toBeTiled[n]=!1,!1}else t.toBeTiled[i.data("id")]=!1}return t.toBeTiled[n]=!0,!0},t.getNodeDegree=function(e){var n=e.id(),r=t.options.eles.edges().filter(function(t,e){"number"==typeof t&&(t=e);var r=t.data("source"),o=t.data("target");if(r!=o&&(r==n||o==n))return!0});return r.length},t.getNodeDegreeWithChildren=function(e){for(var n=t.getNodeDegree(e),r=e.children(),o=0;o<r.length;o++){var i=r[o];n+=t.getNodeDegreeWithChildren(i)}return n},t.groupZeroDegreeMembers=function(){for(var e=[],n=[],r=this,o={},i=0;i<t.options.eles.nodes().length;i++)o[t.options.eles.nodes()[i].id()]=!0;for(var a=t.options.eles.nodes().filter(function(t,e){"number"==typeof t&&(t=e);var n=t.data("parent");return void 0==n||o[n]||(n=void 0),0==r.getNodeDegreeWithChildren(t)&&(void 0==n||void 0!=n&&!r.getToBeTiled(t.parent()[0]))}),i=0;i<a.length;i++){var s=a[i],h=s.parent().id();void 0==h||o[h]||(h=void 0),void 0===e[h]&&(e[h]=[]),e[h]=e[h].concat(s)}for(var h in e)if(e[h].length>1){var g="DummyCompound_"+h;if(n[g]=e[h],t.options.cy.getElementById(g).empty()){t.options.cy.add({group:"nodes",data:{id:g,parent:h}});var l=t.options.cy.nodes()[t.options.cy.nodes().length-1];t.options.eles=t.options.eles.union(l),l.hide();for(var i=0;i<e[h].length;i++){0==i&&l.scratch("coseBilkent",{tempchildren:[]});var s=e[h][i],c=s.scratch("coseBilkent");c||(c={},s.scratch("coseBilkent",c)),c.dummy_parent_id=g,t.options.cy.add({group:"nodes",data:{parent:g,width:s.width(),height:s.height()}});var u=t.options.cy.nodes()[t.options.cy.nodes().length-1];u.hide(),u.css("width",u.data("width")),u.css("height",u.data("height")),u.width(),l.scratch("coseBilkent").tempchildren.push(u)}}}return n},t.performDFSOnCompounds=function(e){var n=[],r=t.getTopMostNodes(t.options.eles.nodes());return t.fillCompexOrderByDFS(n,r),n},t.fillCompexOrderByDFS=function(e,n){for(var r=0;r<n.length;r++){var o=n[r];t.fillCompexOrderByDFS(e,o.children()),t.getToBeTiled(o)&&e.push(o)}},t.clearCompounds=function(){var e=[],n=t.performDFSOnCompounds(t.options);t.compoundOrder=n,t.processChildrenList(t.root,t.getTopMostNodes(t.options.eles.nodes()),t.layout);for(var r=0;r<n.length;r++){var o=t.idToLNode[n[r].id()];e[n[r].id()]=n[r].children(),o.child=null}var i=t.tileCompoundMembers(e);return i},t.clearZeroDegreeMembers=function(e){var n=[];for(var r in e){var o=t.idToLNode[r];n[r]=t.tileNodes(e[r]),o.rect.width=n[r].width,o.rect.height=n[r].height}return n},t.repopulateCompounds=function(e){for(var n=t.compoundOrder.length-1;n>=0;n--){var r=t.compoundOrder[n].id(),o=t.idToLNode[r],i=parseInt(t.compoundOrder[n].css("padding-left")),a=parseInt(t.compoundOrder[n].css("padding-top"));t.adjustLocations(e[r],o.rect.x,o.rect.y,i,a)}},t.repopulateZeroDegreeMembers=function(e){for(var n in e){var r=t.cy.getElementById(n),o=t.idToLNode[n],i=parseInt(r.css("padding-left")),a=parseInt(r.css("padding-top"));t.adjustLocations(e[n],o.rect.x,o.rect.y,i,a);for(var s=r.scratch("coseBilkent").tempchildren,n=0;n<s.length;n++)s[n].remove();r.remove()}},t.adjustLocations=function(e,n,r,o,i){r+=i;for(var a=n+=o,s=0;s<e.rows.length;s++){var h=e.rows[s];n=a;for(var g=0,l=0;l<h.length;l++){var c=h[l];t.cy.getElementById(c.id),c.rect.x=n,c.rect.y=r,n+=c.rect.width+e.horizontalPadding,c.rect.height>g&&(g=c.rect.height)}r+=g+e.verticalPadding}},t.tileCompoundMembers=function(e){var n=[];for(var r in e){var o=t.idToLNode[r];n[r]=t.tileNodes(e[r]),o.rect.width=n[r].width+20,o.rect.height=n[r].height+20}return n},t.tileNodes=function(e){for(var n="function"==typeof this.options.tilingPaddingVertical?this.options.tilingPaddingVertical.call():this.options.tilingPaddingVertical,r="function"==typeof this.options.tilingPaddingHorizontal?this.options.tilingPaddingHorizontal.call():this.options.tilingPaddingHorizontal,o={rows:[],rowWidth:[],rowHeight:[],width:20,height:20,verticalPadding:n,horizontalPadding:r},i=[],a=0;a<e.length;a++){var s=e[a],h=t.idToLNode[s.id()];if(!s.scratch("coseBilkent")||!s.scratch("coseBilkent").dummy_parent_id){var g=h.owner;g.remove(h),t.gm.resetAllNodes(),t.gm.getAllNodes()}i.push(h)}i.sort(function(t,e){return t.rect.width*t.rect.height>e.rect.width*e.rect.height?-1:t.rect.width*t.rect.height<e.rect.width*e.rect.height?1:0});for(var a=0;a<i.length;a++){var h=i[a],l=t.cy.getElementById(h.id).parent()[0],c=0;l&&(c=parseInt(l.css("padding-left"))+parseInt(l.css("padding-right"))),0==o.rows.length?t.insertNodeToRow(o,h,0,c):t.canAddHorizontal(o,h.rect.width,h.rect.height)?t.insertNodeToRow(o,h,t.getShortestRowIndex(o),c):t.insertNodeToRow(o,h,o.rows.length,c),t.shiftToLastRow(o)}return o},t.insertNodeToRow=function(t,e,n,r){var o=r;n==t.rows.length&&(t.rows.push([]),t.rowWidth.push(o),t.rowHeight.push(0));var i=t.rowWidth[n]+e.rect.width;t.rows[n].length>0&&(i+=t.horizontalPadding),t.rowWidth[n]=i,t.width<i&&(t.width=i);var a=e.rect.height;n>0&&(a+=t.verticalPadding);var s=0;a>t.rowHeight[n]&&(s=t.rowHeight[n],t.rowHeight[n]=a,s=t.rowHeight[n]-s),t.height+=s,t.rows[n].push(e)},t.getShortestRowIndex=function(t){for(var e=-1,n=Number.MAX_VALUE,r=0;r<t.rows.length;r++)t.rowWidth[r]<n&&(e=r,n=t.rowWidth[r]);return e},t.getLongestRowIndex=function(t){for(var e=-1,n=Number.MIN_VALUE,r=0;r<t.rows.length;r++)t.rowWidth[r]>n&&(e=r,n=t.rowWidth[r]);return e},t.canAddHorizontal=function(e,n,r){var o=t.getShortestRowIndex(e);if(o<0)return!0;var i=e.rowWidth[o];if(i+e.horizontalPadding+n<=e.width)return!0;var a,s,h=0;return e.rowHeight[o]<r&&o>0&&(h=r+e.verticalPadding-e.rowHeight[o]),a=e.width-i>=n+e.horizontalPadding?(e.height+h)/(i+n+e.horizontalPadding):(e.height+h)/e.width,h=r+e.verticalPadding,(s=e.width<n?(e.height+h)/n:(e.height+h)/e.width)<1&&(s=1/s),a<1&&(a=1/a),a<s},t.shiftToLastRow=function(e){var n=t.getLongestRowIndex(e),r=e.rowWidth.length-1,o=e.rows[n],i=o[o.length-1],a=i.width+e.horizontalPadding;if(e.width-e.rowWidth[r]>a&&n!=r){o.splice(-1,1),e.rows[r].push(i),e.rowWidth[n]=e.rowWidth[n]-a,e.rowWidth[r]=e.rowWidth[r]+a,e.width=e.rowWidth[t.getLongestRowIndex(e)];for(var s=Number.MIN_VALUE,h=0;h<o.length;h++)o[h].height>s&&(s=o[h].height);n>0&&(s+=e.verticalPadding);var g=e.rowHeight[n]+e.rowHeight[r];e.rowHeight[n]=s,e.rowHeight[r]<i.height+e.verticalPadding&&(e.rowHeight[r]=i.height+e.verticalPadding);var l=e.rowHeight[n]+e.rowHeight[r];e.height+=l-g,t.shiftToLastRow(e)}},t.preLayout=function(){var e=t.groupZeroDegreeMembers();t.tiledMemberPack=t.clearCompounds(),t.tiledZeroDegreeNodes=t.clearZeroDegreeMembers(e)},t.postLayout=function(){for(var e=t.options.eles.nodes(),n=0;n<e.length;n++)t.getToBeTiled(e[n]);t.repopulateZeroDegreeMembers(t.tiledZeroDegreeNodes),t.repopulateCompounds(t.tiledMemberPack),t.options.cy.nodes().updateCompoundBounds()}}},{}],30:[function(t,e,n){var r=t("./PointD");function o(t,e){this.lworldOrgX=0,this.lworldOrgY=0,this.ldeviceOrgX=0,this.ldeviceOrgY=0,this.lworldExtX=1,this.lworldExtY=1,this.ldeviceExtX=1,this.ldeviceExtY=1}o.prototype.getWorldOrgX=function(){return this.lworldOrgX},o.prototype.setWorldOrgX=function(t){this.lworldOrgX=t},o.prototype.getWorldOrgY=function(){return this.lworldOrgY},o.prototype.setWorldOrgY=function(t){this.lworldOrgY=t},o.prototype.getWorldExtX=function(){return this.lworldExtX},o.prototype.setWorldExtX=function(t){this.lworldExtX=t},o.prototype.getWorldExtY=function(){return this.lworldExtY},o.prototype.setWorldExtY=function(t){this.lworldExtY=t},o.prototype.getDeviceOrgX=function(){return this.ldeviceOrgX},o.prototype.setDeviceOrgX=function(t){this.ldeviceOrgX=t},o.prototype.getDeviceOrgY=function(){return this.ldeviceOrgY},o.prototype.setDeviceOrgY=function(t){this.ldeviceOrgY=t},o.prototype.getDeviceExtX=function(){return this.ldeviceExtX},o.prototype.setDeviceExtX=function(t){this.ldeviceExtX=t},o.prototype.getDeviceExtY=function(){return this.ldeviceExtY},o.prototype.setDeviceExtY=function(t){this.ldeviceExtY=t},o.prototype.transformX=function(t){var e=0,n=this.lworldExtX;return 0!=n&&(e=this.ldeviceOrgX+(t-this.lworldOrgX)*this.ldeviceExtX/n),e},o.prototype.transformY=function(t){var e=0,n=this.lworldExtY;return 0!=n&&(e=this.ldeviceOrgY+(t-this.lworldOrgY)*this.ldeviceExtY/n),e},o.prototype.inverseTransformX=function(t){var e=0,n=this.ldeviceExtX;return 0!=n&&(e=this.lworldOrgX+(t-this.ldeviceOrgX)*this.lworldExtX/n),e},o.prototype.inverseTransformY=function(t){var e=0,n=this.ldeviceExtY;return 0!=n&&(e=this.lworldOrgY+(t-this.ldeviceOrgY)*this.lworldExtY/n),e},o.prototype.inverseTransformPoint=function(t){var e=new r(this.inverseTransformX(t.x),this.inverseTransformY(t.y));return e},e.exports=o},{"./PointD":26}],31:[function(t,e,n){function r(){}r.lastID=0,r.createID=function(t){return r.isPrimitive(t)?t:null!=t.uniqueID?t.uniqueID:(t.uniqueID=r.getString(),r.lastID++,t.uniqueID)},r.getString=function(t){return null==t&&(t=r.lastID),"Object#"+t},r.isPrimitive=function(t){var e=typeof t;return null==t||"object"!=e&&"function"!=e},e.exports=r},{}],32:[function(t,e,n){"use strict";var r=t("./DimensionD"),o=(t("./HashMap"),t("./HashSet"),t("./IGeometry"),t("./IMath"),t("./Integer"),t("./Point"),t("./PointD")),i=(t("./RandomSeed"),t("./RectangleD"),t("./Transform"),t("./UniqueIDGeneretor"),t("./LGraphObject"),t("./LGraph"),t("./LEdge"),t("./LGraphManager"),t("./LNode"),t("./Layout"),t("./LayoutConstants")),a=(t("./FDLayout"),t("./FDLayoutConstants")),s=(t("./FDLayoutEdge"),t("./FDLayoutNode"),t("./CoSEConstants")),h=(t("./CoSEEdge"),t("./CoSEGraph"),t("./CoSEGraphManager"),t("./CoSELayout")),g=t("./CoSENode"),l=t("./TilingExtension"),c={ready:function(){},stop:function(){},refresh:30,fit:!0,padding:10,paddingCompound:15,randomize:!0,nodeRepulsion:4500,idealEdgeLength:50,edgeElasticity:.45,nestingFactor:.1,gravity:.25,numIter:2500,tile:!0,animate:"end",animationDuration:500,tilingPaddingVertical:10,tilingPaddingHorizontal:10,gravityRangeCompound:1.5,gravityCompound:1,gravityRange:3.8};function u(t){l(this),this.options=function(t,e){var n={};for(var r in t)n[r]=t[r];for(var r in e)n[r]=e[r];return n}(c,t),p(this.options)}var p=function(t){null!=t.nodeRepulsion&&(s.DEFAULT_REPULSION_STRENGTH=a.DEFAULT_REPULSION_STRENGTH=t.nodeRepulsion),null!=t.idealEdgeLength&&(s.DEFAULT_EDGE_LENGTH=a.DEFAULT_EDGE_LENGTH=t.idealEdgeLength),null!=t.edgeElasticity&&(s.DEFAULT_SPRING_STRENGTH=a.DEFAULT_SPRING_STRENGTH=t.edgeElasticity),null!=t.nestingFactor&&(s.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR=a.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR=t.nestingFactor),null!=t.gravity&&(s.DEFAULT_GRAVITY_STRENGTH=a.DEFAULT_GRAVITY_STRENGTH=t.gravity),null!=t.numIter&&(s.MAX_ITERATIONS=a.MAX_ITERATIONS=t.numIter),null!=t.paddingCompound&&(s.DEFAULT_GRAPH_MARGIN=a.DEFAULT_GRAPH_MARGIN=i.DEFAULT_GRAPH_MARGIN=t.paddingCompound),null!=t.gravityRange&&(s.DEFAULT_GRAVITY_RANGE_FACTOR=a.DEFAULT_GRAVITY_RANGE_FACTOR=t.gravityRange),null!=t.gravityCompound&&(s.DEFAULT_COMPOUND_GRAVITY_STRENGTH=a.DEFAULT_COMPOUND_GRAVITY_STRENGTH=t.gravityCompound),null!=t.gravityRangeCompound&&(s.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR=a.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR=t.gravityRangeCompound),s.DEFAULT_INCREMENTAL=a.DEFAULT_INCREMENTAL=i.DEFAULT_INCREMENTAL=!t.randomize,s.ANIMATE=a.ANIMATE=t.animate};u.prototype.run=function(){var t,e,n=this.options,r=(this.idToLNode={},this.layout=new h),o=this;this.cy=this.options.cy,this.cy.trigger({type:"layoutstart",layout:this});var i=r.newGraphManager();this.gm=i;var a=this.options.eles.nodes(),s=this.options.eles.edges();this.root=i.addRoot(),this.options.tile?this.preLayout():this.processChildrenList(this.root,this.getTopMostNodes(a),r);for(var g=0;g<s.length;g++){var l=s[g],c=this.idToLNode[l.data("source")],u=this.idToLNode[l.data("target")],p=i.add(r.newEdge(),c,u);p.id=l.id()}var d=function(t,e){"number"==typeof t&&(t=e);var n=t.data("id"),r=o.idToLNode[n];return{x:r.getRect().getCenterX(),y:r.getRect().getCenterY()}},f=function(){for(var r,i=function(){n.fit&&n.cy.fit(n.eles.nodes(),n.padding),t||(t=!0,o.cy.one("layoutready",n.ready),o.cy.trigger({type:"layoutready",layout:o}))},a=o.options.refresh,s=0;s<a&&!r;s++)r=o.layout.tick();if(r)return o.options.tile&&o.postLayout(),o.options.eles.nodes().positions(d),i(),o.cy.one("layoutstop",o.options.stop),o.cy.trigger("layoutstop"),o.cy.trigger({type:"layoutstop",layout:o}),e&&cancelAnimationFrame(e),o.options.eles.nodes().removeScratch("coseBilkent"),void(t=!1);var h=o.layout.getPositionsData();n.eles.nodes().positions(function(t,e){if("number"==typeof t&&(t=e),t.scratch("coseBilkent")&&t.scratch("coseBilkent").dummy_parent_id){var n=t.scratch("coseBilkent").dummy_parent_id;return{x:n.x,y:n.y}}for(var r=t.data("id"),o=h[r],i=t;null==o;)i=i.parent()[0],o=h[i.id()],h[r]=o;return{x:o.x,y:o.y}}),i(),e=requestAnimationFrame(f)};return r.addListener("layoutstarted",function(){"during"===o.options.animate&&(e=requestAnimationFrame(f))}),r.runLayout(),"during"!==this.options.animate&&setTimeout(function(){o.options.tile&&o.postLayout(),o.options.eles.nodes().not(":parent").layoutPositions(o,o.options,d),o.options.eles.nodes().removeScratch("coseBilkent"),t=!1},0),this},u.prototype.getTopMostNodes=function(t){for(var e={},n=0;n<t.length;n++)e[t[n].id()]=!0;var r=t.filter(function(t,n){"number"==typeof t&&(t=n);for(var r=t.parent()[0];null!=r;){if(e[r.id()])return!1;r=r.parent()[0]}return!0});return r},u.prototype.processChildrenList=function(t,e,n){for(var i=e.length,a=0;a<i;a++){var s=e[a];this.options.eles.nodes().length;var h,l,c=s.children();(h=null!=s.width()&&null!=s.height()?t.add(new g(n.graphManager,new o(s.position("x"),s.position("y")),new r(parseFloat(s.width()),parseFloat(s.height())))):t.add(new g(this.graphManager))).id=s.data("id"),this.idToLNode[s.data("id")]=h,isNaN(h.rect.x)&&(h.rect.x=0),isNaN(h.rect.y)&&(h.rect.y=0),null!=c&&c.length>0&&(l=n.getGraphManager().add(n.newGraph(),h),this.processChildrenList(l,c,n))}},u.prototype.stop=function(){return this.stopped=!0,this.trigger("layoutstop"),this},e.exports=function(t){return u}},{"./CoSEConstants":1,"./CoSEEdge":2,"./CoSEGraph":3,"./CoSEGraphManager":4,"./CoSELayout":5,"./CoSENode":6,"./DimensionD":7,"./FDLayout":9,"./FDLayoutConstants":10,"./FDLayoutEdge":11,"./FDLayoutNode":12,"./HashMap":13,"./HashSet":14,"./IGeometry":15,"./IMath":16,"./Integer":17,"./LEdge":18,"./LGraph":19,"./LGraphManager":20,"./LGraphObject":21,"./LNode":22,"./Layout":23,"./LayoutConstants":24,"./Point":25,"./PointD":26,"./RandomSeed":27,"./RectangleD":28,"./TilingExtension":29,"./Transform":30,"./UniqueIDGeneretor":31}],33:[function(t,e,n){"use strict";var r=t("./Layout"),o=function(t){var e=r(t);t("layout","cose-bilkent",e)};"undefined"!=typeof cytoscape&&o(cytoscape),e.exports=o},{"./Layout":32}]},{},[33])(33)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,