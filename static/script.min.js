!function(t){var e={};function r(o){if(e[o])return e[o].exports;var n=e[o]={i:o,l:!1,exports:{}};return t[o].call(n.exports,n,n.exports,r),n.l=!0,n.exports}r.m=t,r.c=e,r.d=function(t,e,o){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(r.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var n in t)r.d(o,n,function(e){return t[e]}.bind(null,n));return o},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=0)}([function(t,e,r){const o=r(1);cytoscape.use(o),document.querySelector("#cy").style.height=window.innerHeight-250+"px";var n=window.cy=cytoscape({container:document.getElementById("cy"),boxSelectionEnabled:!1,autounselectify:!0,layout:{name:"cose-bilkent",animate:!1},style:[{selector:"node",style:{label:"data(label)",width:75,height:75,"text-max-width":70,"background-color":"#fff","border-width":1,"border-color":"#000","text-valign":"center",color:"#000","font-size":"10px","font-weight":"bold","font-family":"Krub","text-wrap":"wrap"}},{selector:"edge",style:{width:1,"curve-style":"bezier","target-arrow-shape":"triangle","line-color":"#000","target-arrow-color":"#000",label:"data(label)",color:"hsl(0, 0%, 53.3%)","font-size":"9px"}}],elements:ontology});const i={company_size:{Small:["#CDCDCD","#000"],Medium:["#CDCDCD","#000"],Large:["#000","#fff"]}};n._private.elements.forEach(t=>{"nodes"==t._private.group&&Object.keys(t._private.data).forEach(e=>{Object.keys(i).includes(e)&&(t.style("background-color",i[e][t._private.data[e]][0]),t.style("color",i[e][t._private.data[e]][1]))})}),n.on("tap","node",function(t){(t=>{let e=document.querySelector("#describer");e.innerHTML="";let r=t.target._private.data;delete r.id,Object.keys(r).forEach(t=>{let o="<tr><td>"+t+"</td>";o+="<td>",["label","company_size","city"].includes(t)?(o+="<a href='/?search_by="+t+"&q="+r[t]+"'>",o+=r[t],o+="</a>"):o+=r[t],o+="</td></tr>",console.log(o),e.innerHTML+=o})})(t)});let a="",s=window.location.href.split("/").pop();if("?"==s[0]){a="Searched for "+s.split("&")[0].split("=")[1]+"='"+s.split("&")[1].split("=")[1].replace(/%20/g," ")+"'"}else a="Searched for label='Southeast Asia'";document.querySelector("#query").innerHTML=a;document.querySelector("#share").addEventListener("click",t=>{t.preventDefault(),(t=>{const e=document.createElement("textarea");e.value=t,document.body.appendChild(e),e.select(),document.execCommand("copy"),document.body.removeChild(e)})(window.location.href),alertify.log("Copied URL to clipboard")})},function(t,e,r){var o;t.exports=function t(e,r,n){function i(s,h){if(!r[s]){if(!e[s]){var l="function"==typeof o&&o;if(!h&&l)return o(s,!0);if(a)return a(s,!0);var g=new Error("Cannot find module '"+s+"'");throw g.code="MODULE_NOT_FOUND",g}var c=r[s]={exports:{}};e[s][0].call(c.exports,function(t){var r=e[s][1][t];return i(r||t)},c,c.exports,t,e,r,n)}return r[s].exports}for(var a="function"==typeof o&&o,s=0;s<n.length;s++)i(n[s]);return i}({1:[function(t,e,r){var o=t("./FDLayoutConstants");function n(){}for(var i in o)n[i]=o[i];n.DEFAULT_USE_MULTI_LEVEL_SCALING=!1,n.DEFAULT_RADIAL_SEPARATION=o.DEFAULT_EDGE_LENGTH,n.DEFAULT_COMPONENT_SEPERATION=60,e.exports=n},{"./FDLayoutConstants":10}],2:[function(t,e,r){var o=t("./FDLayoutEdge");function n(t,e,r){o.call(this,t,e,r)}for(var i in n.prototype=Object.create(o.prototype),o)n[i]=o[i];e.exports=n},{"./FDLayoutEdge":11}],3:[function(t,e,r){var o=t("./LGraph");function n(t,e,r){o.call(this,t,e,r)}for(var i in n.prototype=Object.create(o.prototype),o)n[i]=o[i];e.exports=n},{"./LGraph":19}],4:[function(t,e,r){var o=t("./LGraphManager");function n(t){o.call(this,t)}for(var i in n.prototype=Object.create(o.prototype),o)n[i]=o[i];e.exports=n},{"./LGraphManager":20}],5:[function(t,e,r){var o=t("./FDLayout"),n=t("./CoSEGraphManager"),i=t("./CoSEGraph"),a=t("./CoSENode"),s=t("./CoSEEdge"),h=t("./CoSEConstants"),l=t("./FDLayoutConstants"),g=t("./LayoutConstants"),c=t("./Point"),p=t("./PointD"),u=t("./Layout"),d=t("./Integer"),f=t("./IGeometry"),y=t("./LGraph"),E=t("./Transform");function v(){o.call(this)}for(var L in v.prototype=Object.create(o.prototype),o)v[L]=o[L];v.prototype.newGraphManager=function(){var t=new n(this);return this.graphManager=t,t},v.prototype.newGraph=function(t){return new i(null,this.graphManager,t)},v.prototype.newNode=function(t){return new a(this.graphManager,t)},v.prototype.newEdge=function(t){return new s(null,null,t)},v.prototype.initParameters=function(){o.prototype.initParameters.call(this,arguments),this.isSubLayout||(h.DEFAULT_EDGE_LENGTH<10?this.idealEdgeLength=10:this.idealEdgeLength=h.DEFAULT_EDGE_LENGTH,this.useSmartIdealEdgeLengthCalculation=h.DEFAULT_USE_SMART_IDEAL_EDGE_LENGTH_CALCULATION,this.springConstant=l.DEFAULT_SPRING_STRENGTH,this.repulsionConstant=l.DEFAULT_REPULSION_STRENGTH,this.gravityConstant=l.DEFAULT_GRAVITY_STRENGTH,this.compoundGravityConstant=l.DEFAULT_COMPOUND_GRAVITY_STRENGTH,this.gravityRangeFactor=l.DEFAULT_GRAVITY_RANGE_FACTOR,this.compoundGravityRangeFactor=l.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR)},v.prototype.layout=function(){var t=g.DEFAULT_CREATE_BENDS_AS_NEEDED;return t&&(this.createBendpoints(),this.graphManager.resetAllEdges()),this.level=0,this.classicLayout()},v.prototype.classicLayout=function(){if(this.calculateNodesToApplyGravitationTo(),this.graphManager.calcLowestCommonAncestors(),this.graphManager.calcInclusionTreeDepths(),this.graphManager.getRoot().calcEstimatedSize(),this.calcIdealEdgeLengths(),!this.incremental){var t=this.getFlatForest();t.length>0?this.positionNodesRadially(t):this.positionNodesRandomly()}return this.initSpringEmbedder(),this.runSpringEmbedder(),!0},v.prototype.tick=function(){if(this.totalIterations++,this.totalIterations===this.maxIterations)return!0;if(this.totalIterations%l.CONVERGENCE_CHECK_PERIOD==0){if(this.isConverged())return!0;this.coolingFactor=this.initialCoolingFactor*((this.maxIterations-this.totalIterations)/this.maxIterations),this.animationPeriod=Math.ceil(this.initialAnimationPeriod*Math.sqrt(this.coolingFactor))}return this.totalDisplacement=0,this.graphManager.updateBounds(),this.calcSpringForces(),this.calcRepulsionForces(),this.calcGravitationalForces(),this.moveNodes(),this.animate(),!1},v.prototype.getPositionsData=function(){for(var t=this.graphManager.getAllNodes(),e={},r=0;r<t.length;r++){var o=t[r].rect,n=t[r].id;e[n]={id:n,x:o.getCenterX(),y:o.getCenterY(),w:o.width,h:o.height}}return e},v.prototype.runSpringEmbedder=function(){this.initialAnimationPeriod=25,this.animationPeriod=this.initialAnimationPeriod;var t=!1;if("during"===l.ANIMATE)this.emit("layoutstarted");else{for(;!t;)t=this.tick();this.graphManager.updateBounds()}},v.prototype.calculateNodesToApplyGravitationTo=function(){var t,e,r=[],o=this.graphManager.getGraphs(),n=o.length;for(e=0;e<n;e++)(t=o[e]).updateConnected(),t.isConnected||(r=r.concat(t.getNodes()));this.graphManager.setAllNodesToApplyGravitation(r)},v.prototype.createBendpoints=function(){var t=[];t=t.concat(this.graphManager.getAllEdges());var e,r=new HashSet;for(e=0;e<t.length;e++){var o=t[e];if(!r.contains(o)){var n=o.getSource(),i=o.getTarget();if(n==i)o.getBendpoints().push(new p),o.getBendpoints().push(new p),this.createDummyNodesForBendpoints(o),r.add(o);else{var a=[];if(a=(a=a.concat(n.getEdgeListToNode(i))).concat(i.getEdgeListToNode(n)),!r.contains(a[0])){var s;if(a.length>1)for(s=0;s<a.length;s++){var h=a[s];h.getBendpoints().push(new p),this.createDummyNodesForBendpoints(h)}r.addAll(list)}}}if(r.size()==t.length)break}},v.prototype.positionNodesRadially=function(t){for(var e=new c(0,0),r=Math.ceil(Math.sqrt(t.length)),o=0,n=0,i=0,a=new p(0,0),s=0;s<t.length;s++){s%r==0&&(i=0,n=o,0!=s&&(n+=h.DEFAULT_COMPONENT_SEPERATION),o=0);var l=t[s],d=u.findCenterOfTree(l);e.x=i,e.y=n,(a=v.radialLayout(l,d,e)).y>o&&(o=Math.floor(a.y)),i=Math.floor(a.x+h.DEFAULT_COMPONENT_SEPERATION)}this.transform(new p(g.WORLD_CENTER_X-a.x/2,g.WORLD_CENTER_Y-a.y/2))},v.radialLayout=function(t,e,r){var o=Math.max(this.maxDiagonalInTree(t),h.DEFAULT_RADIAL_SEPARATION);v.branchRadialLayout(e,null,0,359,0,o);var n=y.calculateBounds(t),i=new E;i.setDeviceOrgX(n.getMinX()),i.setDeviceOrgY(n.getMinY()),i.setWorldOrgX(r.x),i.setWorldOrgY(r.y);for(var a=0;a<t.length;a++){var s=t[a];s.transform(i)}var l=new p(n.getMaxX(),n.getMaxY());return i.inverseTransformPoint(l)},v.branchRadialLayout=function(t,e,r,o,n,i){var a=(o-r+1)/2;a<0&&(a+=180);var s=(a+r)%360,h=s*f.TWO_PI/360,l=(Math.cos(h),n*Math.cos(h)),g=n*Math.sin(h);t.setCenter(l,g);var c=[],p=(c=c.concat(t.getEdges())).length;null!=e&&p--;for(var u,d=0,y=c.length,E=t.getEdgesBetween(e);E.length>1;){var L=E[0];E.splice(0,1);var m=c.indexOf(L);m>=0&&c.splice(m,1),y--,p--}u=null!=e?(c.indexOf(E[0])+1)%y:0;for(var T=Math.abs(o-r)/p,A=u;d!=p;A=++A%y){var N=c[A].getOtherEnd(t);if(N!=e){var D=(r+d*T)%360,_=(D+T)%360;v.branchRadialLayout(N,t,D,_,n+i,i),d++}}},v.maxDiagonalInTree=function(t){for(var e=d.MIN_VALUE,r=0;r<t.length;r++){var o=t[r],n=o.getDiagonal();n>e&&(e=n)}return e},v.prototype.calcRepulsionRange=function(){return 2*(this.level+1)*this.idealEdgeLength},e.exports=v},{"./CoSEConstants":1,"./CoSEEdge":2,"./CoSEGraph":3,"./CoSEGraphManager":4,"./CoSENode":6,"./FDLayout":9,"./FDLayoutConstants":10,"./IGeometry":15,"./Integer":17,"./LGraph":19,"./Layout":23,"./LayoutConstants":24,"./Point":25,"./PointD":26,"./Transform":30}],6:[function(t,e,r){var o=t("./FDLayoutNode"),n=t("./IMath");function i(t,e,r,n){o.call(this,t,e,r,n)}for(var a in i.prototype=Object.create(o.prototype),o)i[a]=o[a];i.prototype.move=function(){var t=this.graphManager.getLayout();this.displacementX=t.coolingFactor*(this.springForceX+this.repulsionForceX+this.gravitationForceX),this.displacementY=t.coolingFactor*(this.springForceY+this.repulsionForceY+this.gravitationForceY),Math.abs(this.displacementX)>t.coolingFactor*t.maxNodeDisplacement&&(this.displacementX=t.coolingFactor*t.maxNodeDisplacement*n.sign(this.displacementX)),Math.abs(this.displacementY)>t.coolingFactor*t.maxNodeDisplacement&&(this.displacementY=t.coolingFactor*t.maxNodeDisplacement*n.sign(this.displacementY)),null==this.child?this.moveBy(this.displacementX,this.displacementY):0==this.child.getNodes().length?this.moveBy(this.displacementX,this.displacementY):this.propogateDisplacementToChildren(this.displacementX,this.displacementY),t.totalDisplacement+=Math.abs(this.displacementX)+Math.abs(this.displacementY),this.springForceX=0,this.springForceY=0,this.repulsionForceX=0,this.repulsionForceY=0,this.gravitationForceX=0,this.gravitationForceY=0,this.displacementX=0,this.displacementY=0},i.prototype.propogateDisplacementToChildren=function(t,e){for(var r,o=this.getChild().getNodes(),n=0;n<o.length;n++)null==(r=o[n]).getChild()?(r.moveBy(t,e),r.displacementX+=t,r.displacementY+=e):r.propogateDisplacementToChildren(t,e)},i.prototype.setPred1=function(t){this.pred1=t},i.prototype.getPred1=function(){return pred1},i.prototype.getPred2=function(){return pred2},i.prototype.setNext=function(t){this.next=t},i.prototype.getNext=function(){return next},i.prototype.setProcessed=function(t){this.processed=t},i.prototype.isProcessed=function(){return processed},e.exports=i},{"./FDLayoutNode":12,"./IMath":16}],7:[function(t,e,r){function o(t,e){this.width=0,this.height=0,null!==t&&null!==e&&(this.height=e,this.width=t)}o.prototype.getWidth=function(){return this.width},o.prototype.setWidth=function(t){this.width=t},o.prototype.getHeight=function(){return this.height},o.prototype.setHeight=function(t){this.height=t},e.exports=o},{}],8:[function(t,e,r){function o(){this.listeners=[]}var n=o.prototype;n.addListener=function(t,e){this.listeners.push({event:t,callback:e})},n.removeListener=function(t,e){for(var r=this.listeners.length;r>=0;r--){var o=this.listeners[r];o.event===t&&o.callback===e&&this.listeners.splice(r,1)}},n.emit=function(t,e){for(var r=0;r<this.listeners.length;r++){var o=this.listeners[r];t===o.event&&o.callback(e)}},e.exports=o},{}],9:[function(t,e,r){var o=t("./Layout"),n=t("./FDLayoutConstants"),i=t("./LayoutConstants"),a=t("./IGeometry"),s=t("./IMath");function h(){o.call(this),this.useSmartIdealEdgeLengthCalculation=n.DEFAULT_USE_SMART_IDEAL_EDGE_LENGTH_CALCULATION,this.idealEdgeLength=n.DEFAULT_EDGE_LENGTH,this.springConstant=n.DEFAULT_SPRING_STRENGTH,this.repulsionConstant=n.DEFAULT_REPULSION_STRENGTH,this.gravityConstant=n.DEFAULT_GRAVITY_STRENGTH,this.compoundGravityConstant=n.DEFAULT_COMPOUND_GRAVITY_STRENGTH,this.gravityRangeFactor=n.DEFAULT_GRAVITY_RANGE_FACTOR,this.compoundGravityRangeFactor=n.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR,this.displacementThresholdPerNode=3*n.DEFAULT_EDGE_LENGTH/100,this.coolingFactor=1,this.initialCoolingFactor=1,this.totalDisplacement=0,this.oldTotalDisplacement=0,this.maxIterations=n.MAX_ITERATIONS}for(var l in h.prototype=Object.create(o.prototype),o)h[l]=o[l];h.prototype.initParameters=function(){o.prototype.initParameters.call(this,arguments),this.layoutQuality==i.DRAFT_QUALITY?(this.displacementThresholdPerNode+=.3,this.maxIterations*=.8):this.layoutQuality==i.PROOF_QUALITY&&(this.displacementThresholdPerNode-=.3,this.maxIterations*=1.2),this.totalIterations=0,this.notAnimatedIterations=0},h.prototype.calcIdealEdgeLengths=function(){for(var t,e,r,o,a,s,h=this.getGraphManager().getAllEdges(),l=0;l<h.length;l++)(t=h[l]).idealLength=this.idealEdgeLength,t.isInterGraph&&(r=t.getSource(),o=t.getTarget(),a=t.getSourceInLca().getEstimatedSize(),s=t.getTargetInLca().getEstimatedSize(),this.useSmartIdealEdgeLengthCalculation&&(t.idealLength+=a+s-2*i.SIMPLE_NODE_SIZE),e=t.getLca().getInclusionTreeDepth(),t.idealLength+=n.DEFAULT_EDGE_LENGTH*n.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR*(r.getInclusionTreeDepth()+o.getInclusionTreeDepth()-2*e))},h.prototype.initSpringEmbedder=function(){this.incremental?(this.coolingFactor=.8,this.initialCoolingFactor=.8,this.maxNodeDisplacement=n.MAX_NODE_DISPLACEMENT_INCREMENTAL):(this.coolingFactor=1,this.initialCoolingFactor=1,this.maxNodeDisplacement=n.MAX_NODE_DISPLACEMENT),this.maxIterations=Math.max(5*this.getAllNodes().length,this.maxIterations),this.totalDisplacementThreshold=this.displacementThresholdPerNode*this.getAllNodes().length,this.repulsionRange=this.calcRepulsionRange()},h.prototype.calcSpringForces=function(){for(var t,e=this.getAllEdges(),r=0;r<e.length;r++)t=e[r],this.calcSpringForce(t,t.idealLength)},h.prototype.calcRepulsionForces=function(){var t,e,r,o,n=this.getAllNodes();for(t=0;t<n.length;t++)for(r=n[t],e=t+1;e<n.length;e++)o=n[e],r.getOwner()==o.getOwner()&&this.calcRepulsionForce(r,o)},h.prototype.calcGravitationalForces=function(){for(var t,e=this.getAllNodesToApplyGravitation(),r=0;r<e.length;r++)t=e[r],this.calcGravitationalForce(t)},h.prototype.moveNodes=function(){for(var t=this.getAllNodes(),e=0;e<t.length;e++)t[e].move()},h.prototype.calcSpringForce=function(t,e){var r,o,n,i,a=t.getSource(),s=t.getTarget();if(this.uniformLeafNodeSizes&&null==a.getChild()&&null==s.getChild())t.updateLengthSimple();else if(t.updateLength(),t.isOverlapingSourceAndTarget)return;r=t.getLength(),o=this.springConstant*(r-e),n=o*(t.lengthX/r),i=o*(t.lengthY/r),a.springForceX+=n,a.springForceY+=i,s.springForceX-=n,s.springForceY-=i},h.prototype.calcRepulsionForce=function(t,e){var r,o,i,h,l,g,c,p=t.getRect(),u=e.getRect(),d=new Array(2),f=new Array(4);p.intersects(u)?(a.calcSeparationAmount(p,u,d,n.DEFAULT_EDGE_LENGTH/2),g=d[0],c=d[1]):(this.uniformLeafNodeSizes&&null==t.getChild()&&null==e.getChild()?(r=u.getCenterX()-p.getCenterX(),o=u.getCenterY()-p.getCenterY()):(a.getIntersection(p,u,f),r=f[2]-f[0],o=f[3]-f[1]),Math.abs(r)<n.MIN_REPULSION_DIST&&(r=s.sign(r)*n.MIN_REPULSION_DIST),Math.abs(o)<n.MIN_REPULSION_DIST&&(o=s.sign(o)*n.MIN_REPULSION_DIST),i=r*r+o*o,h=Math.sqrt(i),l=this.repulsionConstant/i,g=l*r/h,c=l*o/h),t.repulsionForceX-=g,t.repulsionForceY-=c,e.repulsionForceX+=g,e.repulsionForceY+=c},h.prototype.calcGravitationalForce=function(t){var e,r,o,n,i,a,s,h;e=t.getOwner(),r=(e.getRight()+e.getLeft())/2,o=(e.getTop()+e.getBottom())/2,n=t.getCenterX()-r,i=t.getCenterY()-o,a=Math.abs(n),s=Math.abs(i),t.getOwner()==this.graphManager.getRoot()?(Math.floor(80),h=Math.floor(e.getEstimatedSize()*this.gravityRangeFactor),(a>h||s>h)&&(t.gravitationForceX=-this.gravityConstant*n,t.gravitationForceY=-this.gravityConstant*i)):(h=Math.floor(e.getEstimatedSize()*this.compoundGravityRangeFactor),(a>h||s>h)&&(t.gravitationForceX=-this.gravityConstant*n*this.compoundGravityConstant,t.gravitationForceY=-this.gravityConstant*i*this.compoundGravityConstant))},h.prototype.isConverged=function(){var t,e=!1;return this.totalIterations>this.maxIterations/3&&(e=Math.abs(this.totalDisplacement-this.oldTotalDisplacement)<2),t=this.totalDisplacement<this.totalDisplacementThreshold,this.oldTotalDisplacement=this.totalDisplacement,t||e},h.prototype.animate=function(){this.animationDuringLayout&&!this.isSubLayout&&(this.notAnimatedIterations==this.animationPeriod?(this.update(),this.notAnimatedIterations=0):this.notAnimatedIterations++)},h.prototype.calcRepulsionRange=function(){return 0},e.exports=h},{"./FDLayoutConstants":10,"./IGeometry":15,"./IMath":16,"./Layout":23,"./LayoutConstants":24}],10:[function(t,e,r){var o=t("./LayoutConstants");function n(){}for(var i in o)n[i]=o[i];n.MAX_ITERATIONS=2500,n.DEFAULT_EDGE_LENGTH=50,n.DEFAULT_SPRING_STRENGTH=.45,n.DEFAULT_REPULSION_STRENGTH=4500,n.DEFAULT_GRAVITY_STRENGTH=.4,n.DEFAULT_COMPOUND_GRAVITY_STRENGTH=1,n.DEFAULT_GRAVITY_RANGE_FACTOR=3.8,n.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR=1.5,n.DEFAULT_USE_SMART_IDEAL_EDGE_LENGTH_CALCULATION=!0,n.DEFAULT_USE_SMART_REPULSION_RANGE_CALCULATION=!0,n.MAX_NODE_DISPLACEMENT_INCREMENTAL=100,n.MAX_NODE_DISPLACEMENT=3*n.MAX_NODE_DISPLACEMENT_INCREMENTAL,n.MIN_REPULSION_DIST=n.DEFAULT_EDGE_LENGTH/10,n.CONVERGENCE_CHECK_PERIOD=100,n.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR=.1,n.MIN_EDGE_LENGTH=1,n.GRID_CALCULATION_CHECK_PERIOD=10,e.exports=n},{"./LayoutConstants":24}],11:[function(t,e,r){var o=t("./LEdge"),n=t("./FDLayoutConstants");function i(t,e,r){o.call(this,t,e,r),this.idealLength=n.DEFAULT_EDGE_LENGTH}for(var a in i.prototype=Object.create(o.prototype),o)i[a]=o[a];e.exports=i},{"./FDLayoutConstants":10,"./LEdge":18}],12:[function(t,e,r){var o=t("./LNode");function n(t,e,r,n){o.call(this,t,e,r,n),this.springForceX=0,this.springForceY=0,this.repulsionForceX=0,this.repulsionForceY=0,this.gravitationForceX=0,this.gravitationForceY=0,this.displacementX=0,this.displacementY=0,this.startX=0,this.finishX=0,this.startY=0,this.finishY=0,this.surrounding=[]}for(var i in n.prototype=Object.create(o.prototype),o)n[i]=o[i];n.prototype.setGridCoordinates=function(t,e,r,o){this.startX=t,this.finishX=e,this.startY=r,this.finishY=o},e.exports=n},{"./LNode":22}],13:[function(t,e,r){var o=t("./UniqueIDGeneretor");function n(){this.map={},this.keys=[]}n.prototype.put=function(t,e){var r=o.createID(t);this.contains(r)||(this.map[r]=e,this.keys.push(t))},n.prototype.contains=function(t){return o.createID(t),null!=this.map[t]},n.prototype.get=function(t){var e=o.createID(t);return this.map[e]},n.prototype.keySet=function(){return this.keys},e.exports=n},{"./UniqueIDGeneretor":31}],14:[function(t,e,r){var o=t("./UniqueIDGeneretor");function n(){this.set={}}n.prototype.add=function(t){var e=o.createID(t);this.contains(e)||(this.set[e]=t)},n.prototype.remove=function(t){delete this.set[o.createID(t)]},n.prototype.clear=function(){this.set={}},n.prototype.contains=function(t){return this.set[o.createID(t)]==t},n.prototype.isEmpty=function(){return 0===this.size()},n.prototype.size=function(){return Object.keys(this.set).length},n.prototype.addAllTo=function(t){for(var e=Object.keys(this.set),r=e.length,o=0;o<r;o++)t.push(this.set[e[o]])},n.prototype.size=function(){return Object.keys(this.set).length},n.prototype.addAll=function(t){for(var e=t.length,r=0;r<e;r++){var o=t[r];this.add(o)}},e.exports=n},{"./UniqueIDGeneretor":31}],15:[function(t,e,r){function o(){}o.calcSeparationAmount=function(t,e,r,n){if(!t.intersects(e))throw"assert failed";var i=new Array(2);o.decideDirectionsForOverlappingNodes(t,e,i),r[0]=Math.min(t.getRight(),e.getRight())-Math.max(t.x,e.x),r[1]=Math.min(t.getBottom(),e.getBottom())-Math.max(t.y,e.y),t.getX()<=e.getX()&&t.getRight()>=e.getRight()?r[0]+=Math.min(e.getX()-t.getX(),t.getRight()-e.getRight()):e.getX()<=t.getX()&&e.getRight()>=t.getRight()&&(r[0]+=Math.min(t.getX()-e.getX(),e.getRight()-t.getRight())),t.getY()<=e.getY()&&t.getBottom()>=e.getBottom()?r[1]+=Math.min(e.getY()-t.getY(),t.getBottom()-e.getBottom()):e.getY()<=t.getY()&&e.getBottom()>=t.getBottom()&&(r[1]+=Math.min(t.getY()-e.getY(),e.getBottom()-t.getBottom()));var a=Math.abs((e.getCenterY()-t.getCenterY())/(e.getCenterX()-t.getCenterX()));e.getCenterY()==t.getCenterY()&&e.getCenterX()==t.getCenterX()&&(a=1);var s=a*r[0],h=r[1]/a;r[0]<h?h=r[0]:s=r[1],r[0]=-1*i[0]*(h/2+n),r[1]=-1*i[1]*(s/2+n)},o.decideDirectionsForOverlappingNodes=function(t,e,r){t.getCenterX()<e.getCenterX()?r[0]=-1:r[0]=1,t.getCenterY()<e.getCenterY()?r[1]=-1:r[1]=1},o.getIntersection2=function(t,e,r){var n=t.getCenterX(),i=t.getCenterY(),a=e.getCenterX(),s=e.getCenterY();if(t.intersects(e))return r[0]=n,r[1]=i,r[2]=a,r[3]=s,!0;var h=t.getX(),l=t.getY(),g=t.getRight(),c=t.getX(),p=t.getBottom(),u=t.getRight(),d=t.getWidthHalf(),f=t.getHeightHalf(),y=e.getX(),E=e.getY(),v=e.getRight(),L=e.getX(),m=e.getBottom(),T=e.getRight(),A=e.getWidthHalf(),N=e.getHeightHalf(),D=!1,_=!1;if(n==a){if(i>s)return r[0]=n,r[1]=l,r[2]=a,r[3]=m,!1;if(i<s)return r[0]=n,r[1]=p,r[2]=a,r[3]=E,!1}else if(i==s){if(n>a)return r[0]=h,r[1]=i,r[2]=v,r[3]=s,!1;if(n<a)return r[0]=g,r[1]=i,r[2]=y,r[3]=s,!1}else{var w,O,I,R,M,C,G=t.height/t.width,x=e.height/e.width,S=(s-i)/(a-n);if(-G==S?n>a?(r[0]=c,r[1]=p,D=!0):(r[0]=g,r[1]=l,D=!0):G==S&&(n>a?(r[0]=h,r[1]=l,D=!0):(r[0]=u,r[1]=p,D=!0)),-x==S?a>n?(r[2]=L,r[3]=m,_=!0):(r[2]=v,r[3]=E,_=!0):x==S&&(a>n?(r[2]=y,r[3]=E,_=!0):(r[2]=T,r[3]=m,_=!0)),D&&_)return!1;if(n>a?i>s?(w=o.getCardinalDirection(G,S,4),O=o.getCardinalDirection(x,S,2)):(w=o.getCardinalDirection(-G,S,3),O=o.getCardinalDirection(-x,S,1)):i>s?(w=o.getCardinalDirection(-G,S,1),O=o.getCardinalDirection(-x,S,3)):(w=o.getCardinalDirection(G,S,2),O=o.getCardinalDirection(x,S,4)),!D)switch(w){case 1:R=l,I=n+-f/S,r[0]=I,r[1]=R;break;case 2:I=u,R=i+d*S,r[0]=I,r[1]=R;break;case 3:R=p,I=n+f/S,r[0]=I,r[1]=R;break;case 4:I=c,R=i+-d*S,r[0]=I,r[1]=R}if(!_)switch(O){case 1:C=E,M=a+-N/S,r[2]=M,r[3]=C;break;case 2:M=T,C=s+A*S,r[2]=M,r[3]=C;break;case 3:C=m,M=a+N/S,r[2]=M,r[3]=C;break;case 4:M=L,C=s+-A*S,r[2]=M,r[3]=C}}return!1},o.getCardinalDirection=function(t,e,r){return t>e?r:1+r%4},o.getIntersection=function(t,e,r,n){if(null==n)return o.getIntersection2(t,e,r);var i,a,s,h,l,g,c,p=t.x,u=t.y,d=e.x,f=e.y,y=r.x,E=r.y,v=n.x,L=n.y;return l=d*u-p*f,g=v*E-y*L,0==(c=(i=f-u)*(h=y-v)-(a=L-E)*(s=p-d))?null:new Point((s*g-h*l)/c,(a*l-i*g)/c)},o.HALF_PI=.5*Math.PI,o.ONE_AND_HALF_PI=1.5*Math.PI,o.TWO_PI=2*Math.PI,o.THREE_PI=3*Math.PI,e.exports=o},{}],16:[function(t,e,r){function o(){}o.sign=function(t){return t>0?1:t<0?-1:0},o.floor=function(t){return t<0?Math.ceil(t):Math.floor(t)},o.ceil=function(t){return t<0?Math.floor(t):Math.ceil(t)},e.exports=o},{}],17:[function(t,e,r){function o(){}o.MAX_VALUE=2147483647,o.MIN_VALUE=-2147483648,e.exports=o},{}],18:[function(t,e,r){var o=t("./LGraphObject"),n=t("./IGeometry"),i=t("./IMath");function a(t,e,r){o.call(this,r),this.isOverlapingSourceAndTarget=!1,this.vGraphObject=r,this.bendpoints=[],this.source=t,this.target=e}for(var s in a.prototype=Object.create(o.prototype),o)a[s]=o[s];a.prototype.getSource=function(){return this.source},a.prototype.getTarget=function(){return this.target},a.prototype.isInterGraph=function(){return this.isInterGraph},a.prototype.getLength=function(){return this.length},a.prototype.isOverlapingSourceAndTarget=function(){return this.isOverlapingSourceAndTarget},a.prototype.getBendpoints=function(){return this.bendpoints},a.prototype.getLca=function(){return this.lca},a.prototype.getSourceInLca=function(){return this.sourceInLca},a.prototype.getTargetInLca=function(){return this.targetInLca},a.prototype.getOtherEnd=function(t){if(this.source===t)return this.target;if(this.target===t)return this.source;throw"Node is not incident with this edge"},a.prototype.getOtherEndInGraph=function(t,e){for(var r=this.getOtherEnd(t),o=e.getGraphManager().getRoot();;){if(r.getOwner()==e)return r;if(r.getOwner()==o)break;r=r.getOwner().getParent()}return null},a.prototype.updateLength=function(){var t=new Array(4);this.isOverlapingSourceAndTarget=n.getIntersection(this.target.getRect(),this.source.getRect(),t),this.isOverlapingSourceAndTarget||(this.lengthX=t[0]-t[2],this.lengthY=t[1]-t[3],Math.abs(this.lengthX)<1&&(this.lengthX=i.sign(this.lengthX)),Math.abs(this.lengthY)<1&&(this.lengthY=i.sign(this.lengthY)),this.length=Math.sqrt(this.lengthX*this.lengthX+this.lengthY*this.lengthY))},a.prototype.updateLengthSimple=function(){this.lengthX=this.target.getCenterX()-this.source.getCenterX(),this.lengthY=this.target.getCenterY()-this.source.getCenterY(),Math.abs(this.lengthX)<1&&(this.lengthX=i.sign(this.lengthX)),Math.abs(this.lengthY)<1&&(this.lengthY=i.sign(this.lengthY)),this.length=Math.sqrt(this.lengthX*this.lengthX+this.lengthY*this.lengthY)},e.exports=a},{"./IGeometry":15,"./IMath":16,"./LGraphObject":21}],19:[function(t,e,r){var o=t("./LGraphObject"),n=t("./Integer"),i=t("./LayoutConstants"),a=t("./LGraphManager"),s=t("./LNode"),h=t("./HashSet"),l=t("./RectangleD"),g=t("./Point");function c(t,e,r){o.call(this,r),this.estimatedSize=n.MIN_VALUE,this.margin=i.DEFAULT_GRAPH_MARGIN,this.edges=[],this.nodes=[],this.isConnected=!1,this.parent=t,null!=e&&e instanceof a?this.graphManager=e:null!=e&&e instanceof Layout&&(this.graphManager=e.graphManager)}for(var p in c.prototype=Object.create(o.prototype),o)c[p]=o[p];c.prototype.getNodes=function(){return this.nodes},c.prototype.getEdges=function(){return this.edges},c.prototype.getGraphManager=function(){return this.graphManager},c.prototype.getParent=function(){return this.parent},c.prototype.getLeft=function(){return this.left},c.prototype.getRight=function(){return this.right},c.prototype.getTop=function(){return this.top},c.prototype.getBottom=function(){return this.bottom},c.prototype.isConnected=function(){return this.isConnected},c.prototype.add=function(t,e,r){if(null==e&&null==r){var o=t;if(null==this.graphManager)throw"Graph has no graph mgr!";if(this.getNodes().indexOf(o)>-1)throw"Node already in graph!";return o.owner=this,this.getNodes().push(o),o}var n=t;if(!(this.getNodes().indexOf(e)>-1&&this.getNodes().indexOf(r)>-1))throw"Source or target not in graph!";if(e.owner!=r.owner||e.owner!=this)throw"Both owners must be this graph!";return e.owner!=r.owner?null:(n.source=e,n.target=r,n.isInterGraph=!1,this.getEdges().push(n),e.edges.push(n),r!=e&&r.edges.push(n),n)},c.prototype.remove=function(t){var e=t;if(t instanceof s){if(null==e)throw"Node is null!";if(null==e.owner||e.owner!=this)throw"Owner graph is invalid!";if(null==this.graphManager)throw"Owner graph manager is invalid!";for(var r=e.edges.slice(),o=r.length,n=0;n<o;n++)(a=r[n]).isInterGraph?this.graphManager.remove(a):a.source.owner.remove(a);var i=this.nodes.indexOf(e);if(-1==i)throw"Node not in owner node list!";this.nodes.splice(i,1)}else if(t instanceof LEdge){var a=t;if(null==a)throw"Edge is null!";if(null==a.source||null==a.target)throw"Source and/or target is null!";if(null==a.source.owner||null==a.target.owner||a.source.owner!=this||a.target.owner!=this)throw"Source and/or target owner is invalid!";var h=a.source.edges.indexOf(a),l=a.target.edges.indexOf(a);if(!(h>-1&&l>-1))throw"Source and/or target doesn't know this edge!";a.source.edges.splice(h,1),a.target!=a.source&&a.target.edges.splice(l,1);var i=a.source.owner.getEdges().indexOf(a);if(-1==i)throw"Not in owner's edge list!";a.source.owner.getEdges().splice(i,1)}},c.prototype.updateLeftTop=function(){for(var t,e,r=n.MAX_VALUE,o=n.MAX_VALUE,i=this.getNodes(),a=i.length,s=0;s<a;s++){var h=i[s];t=Math.floor(h.getTop()),e=Math.floor(h.getLeft()),r>t&&(r=t),o>e&&(o=e)}return r==n.MAX_VALUE?null:(this.left=o-this.margin,this.top=r-this.margin,new g(this.left,this.top))},c.prototype.updateBounds=function(t){for(var e,r,o,i,a=n.MAX_VALUE,s=-n.MAX_VALUE,h=n.MAX_VALUE,g=-n.MAX_VALUE,c=this.nodes,p=c.length,u=0;u<p;u++){var d=c[u];t&&null!=d.child&&d.updateBounds(),e=Math.floor(d.getLeft()),r=Math.floor(d.getRight()),o=Math.floor(d.getTop()),i=Math.floor(d.getBottom()),a>e&&(a=e),s<r&&(s=r),h>o&&(h=o),g<i&&(g=i)}var f=new l(a,h,s-a,g-h);a==n.MAX_VALUE&&(this.left=Math.floor(this.parent.getLeft()),this.right=Math.floor(this.parent.getRight()),this.top=Math.floor(this.parent.getTop()),this.bottom=Math.floor(this.parent.getBottom())),this.left=f.x-this.margin,this.right=f.x+f.width+this.margin,this.top=f.y-this.margin,this.bottom=f.y+f.height+this.margin},c.calculateBounds=function(t){for(var e,r,o,i,a=n.MAX_VALUE,s=-n.MAX_VALUE,h=n.MAX_VALUE,g=-n.MAX_VALUE,c=t.length,p=0;p<c;p++){var u=t[p];e=Math.floor(u.getLeft()),r=Math.floor(u.getRight()),o=Math.floor(u.getTop()),i=Math.floor(u.getBottom()),a>e&&(a=e),s<r&&(s=r),h>o&&(h=o),g<i&&(g=i)}var d=new l(a,h,s-a,g-h);return d},c.prototype.getInclusionTreeDepth=function(){return this==this.graphManager.getRoot()?1:this.parent.getInclusionTreeDepth()},c.prototype.getEstimatedSize=function(){if(this.estimatedSize==n.MIN_VALUE)throw"assert failed";return this.estimatedSize},c.prototype.calcEstimatedSize=function(){for(var t=0,e=this.nodes,r=e.length,o=0;o<r;o++){var n=e[o];t+=n.calcEstimatedSize()}return this.estimatedSize=0==t?i.EMPTY_COMPOUND_NODE_SIZE:Math.floor(t/Math.sqrt(this.nodes.length)),Math.floor(this.estimatedSize)},c.prototype.updateConnected=function(){if(0!=this.nodes.length){var t,e,r=[],o=new h,n=this.nodes[0];for(r=r.concat(n.withChildren());r.length>0;){n=r.shift(),o.add(n);for(var i=(t=n.getEdges()).length,a=0;a<i;a++){var s=t[a];null==(e=s.getOtherEndInGraph(n,this))||o.contains(e)||(r=r.concat(e.withChildren()))}}if(this.isConnected=!1,o.size()>=this.nodes.length){var l=0,i=o.size();for(var g in o.set){var c=o.set[g];c.owner==this&&l++}l==this.nodes.length&&(this.isConnected=!0)}}else this.isConnected=!0},e.exports=c},{"./HashSet":14,"./Integer":17,"./LGraphManager":20,"./LGraphObject":21,"./LNode":22,"./LayoutConstants":24,"./Point":25,"./RectangleD":28}],20:[function(t,e,r){function o(t){this.layout=t,this.graphs=[],this.edges=[]}o.prototype.addRoot=function(){var t=this.layout.newGraph(),e=this.layout.newNode(null),r=this.add(t,e);return this.setRootGraph(r),this.rootGraph},o.prototype.add=function(t,e,r,o,n){if(null==r&&null==o&&null==n){if(null==t)throw"Graph is null!";if(null==e)throw"Parent node is null!";if(this.graphs.indexOf(t)>-1)throw"Graph already in this graph mgr!";if(this.graphs.push(t),null!=t.parent)throw"Already has a parent!";if(null!=e.child)throw"Already has a child!";return t.parent=e,e.child=t,t}n=r,r=t;var i=(o=e).getOwner(),a=n.getOwner();if(null==i||i.getGraphManager()!=this)throw"Source not in this graph mgr!";if(null==a||a.getGraphManager()!=this)throw"Target not in this graph mgr!";if(i==a)return r.isInterGraph=!1,i.add(r,o,n);if(r.isInterGraph=!0,r.source=o,r.target=n,this.edges.indexOf(r)>-1)throw"Edge already in inter-graph edge list!";if(this.edges.push(r),null==r.source||null==r.target)throw"Edge source and/or target is null!";if(-1!=r.source.edges.indexOf(r)||-1!=r.target.edges.indexOf(r))throw"Edge already in source and/or target incidency list!";return r.source.edges.push(r),r.target.edges.push(r),r},o.prototype.remove=function(t){if(t instanceof LGraph){var e=t;if(e.getGraphManager()!=this)throw"Graph not in this graph mgr";if(e!=this.rootGraph&&(null==e.parent||e.parent.graphManager!=this))throw"Invalid parent node!";for(var r,o=[],n=(o=o.concat(e.getEdges())).length,i=0;i<n;i++)r=o[i],e.remove(r);var a,s=[];s=s.concat(e.getNodes()),n=s.length;for(var i=0;i<n;i++)a=s[i],e.remove(a);e==this.rootGraph&&this.setRootGraph(null);var h=this.graphs.indexOf(e);this.graphs.splice(h,1),e.parent=null}else if(t instanceof LEdge){if(null==(r=t))throw"Edge is null!";if(!r.isInterGraph)throw"Not an inter-graph edge!";if(null==r.source||null==r.target)throw"Source and/or target is null!";if(-1==r.source.edges.indexOf(r)||-1==r.target.edges.indexOf(r))throw"Source and/or target doesn't know this edge!";var h=r.source.edges.indexOf(r);if(r.source.edges.splice(h,1),h=r.target.edges.indexOf(r),r.target.edges.splice(h,1),null==r.source.owner||null==r.source.owner.getGraphManager())throw"Edge owner graph or owner graph manager is null!";if(-1==r.source.owner.getGraphManager().edges.indexOf(r))throw"Not in owner graph manager's edge list!";var h=r.source.owner.getGraphManager().edges.indexOf(r);r.source.owner.getGraphManager().edges.splice(h,1)}},o.prototype.updateBounds=function(){this.rootGraph.updateBounds(!0)},o.prototype.getGraphs=function(){return this.graphs},o.prototype.getAllNodes=function(){if(null==this.allNodes){for(var t=[],e=this.getGraphs(),r=e.length,o=0;o<r;o++)t=t.concat(e[o].getNodes());this.allNodes=t}return this.allNodes},o.prototype.resetAllNodes=function(){this.allNodes=null},o.prototype.resetAllEdges=function(){this.allEdges=null},o.prototype.resetAllNodesToApplyGravitation=function(){this.allNodesToApplyGravitation=null},o.prototype.getAllEdges=function(){if(null==this.allEdges){for(var t=[],e=this.getGraphs(),r=(e.length,0);r<e.length;r++)t=t.concat(e[r].getEdges());t=t.concat(this.edges),this.allEdges=t}return this.allEdges},o.prototype.getAllNodesToApplyGravitation=function(){return this.allNodesToApplyGravitation},o.prototype.setAllNodesToApplyGravitation=function(t){if(null!=this.allNodesToApplyGravitation)throw"assert failed";this.allNodesToApplyGravitation=t},o.prototype.getRoot=function(){return this.rootGraph},o.prototype.setRootGraph=function(t){if(t.getGraphManager()!=this)throw"Root not in this graph mgr!";this.rootGraph=t,null==t.parent&&(t.parent=this.layout.newNode("Root node"))},o.prototype.getLayout=function(){return this.layout},o.prototype.isOneAncestorOfOther=function(t,e){if(null==t||null==e)throw"assert failed";if(t==e)return!0;for(var r,o=t.getOwner();null!=(r=o.getParent());){if(r==e)return!0;if(null==(o=r.getOwner()))break}for(o=e.getOwner();null!=(r=o.getParent());){if(r==t)return!0;if(null==(o=r.getOwner()))break}return!1},o.prototype.calcLowestCommonAncestors=function(){for(var t,e,r,o,n,i=this.getAllEdges(),a=i.length,s=0;s<a;s++)if(t=i[s],e=t.source,r=t.target,t.lca=null,t.sourceInLca=e,t.targetInLca=r,e!=r){for(o=e.getOwner();null==t.lca;){for(n=r.getOwner();null==t.lca;){if(n==o){t.lca=n;break}if(n==this.rootGraph)break;if(null!=t.lca)throw"assert failed";t.targetInLca=n.getParent(),n=t.targetInLca.getOwner()}if(o==this.rootGraph)break;null==t.lca&&(t.sourceInLca=o.getParent(),o=t.sourceInLca.getOwner())}if(null==t.lca)throw"assert failed"}else t.lca=e.getOwner()},o.prototype.calcLowestCommonAncestor=function(t,e){if(t==e)return t.getOwner();for(var r=t.getOwner();null!=r;){for(var o=e.getOwner();null!=o;){if(o==r)return o;o=o.getParent().getOwner()}r=r.getParent().getOwner()}return r},o.prototype.calcInclusionTreeDepths=function(t,e){var r;null==t&&null==e&&(t=this.rootGraph,e=1);for(var o=t.getNodes(),n=o.length,i=0;i<n;i++)(r=o[i]).inclusionTreeDepth=e,null!=r.child&&this.calcInclusionTreeDepths(r.child,e+1)},o.prototype.includesInvalidEdge=function(){for(var t,e=this.edges.length,r=0;r<e;r++)if(t=this.edges[r],this.isOneAncestorOfOther(t.source,t.target))return!0;return!1},e.exports=o},{}],21:[function(t,e,r){e.exports=function(t){this.vGraphObject=t}},{}],22:[function(t,e,r){var o=t("./LGraphObject"),n=t("./Integer"),i=t("./RectangleD"),a=t("./LayoutConstants"),s=t("./RandomSeed"),h=t("./PointD"),l=t("./HashSet");function g(t,e,r,a){null==r&&null==a&&(a=e),o.call(this,a),null!=t.graphManager&&(t=t.graphManager),this.estimatedSize=n.MIN_VALUE,this.inclusionTreeDepth=n.MAX_VALUE,this.vGraphObject=a,this.edges=[],this.graphManager=t,this.rect=null!=r&&null!=e?new i(e.x,e.y,r.width,r.height):new i}for(var c in g.prototype=Object.create(o.prototype),o)g[c]=o[c];g.prototype.getEdges=function(){return this.edges},g.prototype.getChild=function(){return this.child},g.prototype.getOwner=function(){if(null!=this.owner&&!(null==this.owner||this.owner.getNodes().indexOf(this)>-1))throw"assert failed";return this.owner},g.prototype.getWidth=function(){return this.rect.width},g.prototype.setWidth=function(t){this.rect.width=t},g.prototype.getHeight=function(){return this.rect.height},g.prototype.setHeight=function(t){this.rect.height=t},g.prototype.getCenterX=function(){return this.rect.x+this.rect.width/2},g.prototype.getCenterY=function(){return this.rect.y+this.rect.height/2},g.prototype.getCenter=function(){return new h(this.rect.x+this.rect.width/2,this.rect.y+this.rect.height/2)},g.prototype.getLocation=function(){return new h(this.rect.x,this.rect.y)},g.prototype.getRect=function(){return this.rect},g.prototype.getDiagonal=function(){return Math.sqrt(this.rect.width*this.rect.width+this.rect.height*this.rect.height)},g.prototype.setRect=function(t,e){this.rect.x=t.x,this.rect.y=t.y,this.rect.width=e.width,this.rect.height=e.height},g.prototype.setCenter=function(t,e){this.rect.x=t-this.rect.width/2,this.rect.y=e-this.rect.height/2},g.prototype.setLocation=function(t,e){this.rect.x=t,this.rect.y=e},g.prototype.moveBy=function(t,e){this.rect.x+=t,this.rect.y+=e},g.prototype.getEdgeListToNode=function(t){var e,r=[];for(var o in this.edges)if((e=o).target==t){if(e.source!=this)throw"Incorrect edge source!";r.push(e)}return r},g.prototype.getEdgesBetween=function(t){var e,r=[];for(var o in this.edges){if((e=this.edges[o]).source!=this&&e.target!=this)throw"Incorrect edge source and/or target";e.target!=t&&e.source!=t||r.push(e)}return r},g.prototype.getNeighborsList=function(){var t,e=new l;for(var r in this.edges)if((t=this.edges[r]).source==this)e.add(t.target);else{if(!t.target==this)throw"Incorrect incidency!";e.add(t.source)}return e},g.prototype.withChildren=function(){var t,e=[];if(e.push(this),null!=this.child)for(var r=this.child.getNodes(),o=0;o<r.length;o++)t=r[o],e=e.concat(t.withChildren());return e},g.prototype.getEstimatedSize=function(){if(this.estimatedSize==n.MIN_VALUE)throw"assert failed";return this.estimatedSize},g.prototype.calcEstimatedSize=function(){return null==this.child?this.estimatedSize=Math.floor((this.rect.width+this.rect.height)/2):(this.estimatedSize=this.child.calcEstimatedSize(),this.rect.width=this.estimatedSize,this.rect.height=this.estimatedSize,this.estimatedSize)},g.prototype.scatter=function(){var t,e,r=-a.INITIAL_WORLD_BOUNDARY,o=a.INITIAL_WORLD_BOUNDARY;t=a.WORLD_CENTER_X+s.nextDouble()*(o-r)+r;var n=-a.INITIAL_WORLD_BOUNDARY,i=a.INITIAL_WORLD_BOUNDARY;e=a.WORLD_CENTER_Y+s.nextDouble()*(i-n)+n,this.rect.x=t,this.rect.y=e},g.prototype.updateBounds=function(){if(null==this.getChild())throw"assert failed";if(0!=this.getChild().getNodes().length){var t=this.getChild();t.updateBounds(!0),this.rect.x=t.getLeft(),this.rect.y=t.getTop(),this.setWidth(t.getRight()-t.getLeft()),this.setHeight(t.getBottom()-t.getTop())}},g.prototype.getInclusionTreeDepth=function(){if(this.inclusionTreeDepth==n.MAX_VALUE)throw"assert failed";return this.inclusionTreeDepth},g.prototype.transform=function(t){var e=this.rect.x;e>a.WORLD_BOUNDARY?e=a.WORLD_BOUNDARY:e<-a.WORLD_BOUNDARY&&(e=-a.WORLD_BOUNDARY);var r=this.rect.y;r>a.WORLD_BOUNDARY?r=a.WORLD_BOUNDARY:r<-a.WORLD_BOUNDARY&&(r=-a.WORLD_BOUNDARY);var o=new h(e,r),n=t.inverseTransformPoint(o);this.setLocation(n.x,n.y)},g.prototype.getLeft=function(){return this.rect.x},g.prototype.getRight=function(){return this.rect.x+this.rect.width},g.prototype.getTop=function(){return this.rect.y},g.prototype.getBottom=function(){return this.rect.y+this.rect.height},g.prototype.getParent=function(){return null==this.owner?null:this.owner.getParent()},e.exports=g},{"./HashSet":14,"./Integer":17,"./LGraphObject":21,"./LayoutConstants":24,"./PointD":26,"./RandomSeed":27,"./RectangleD":28}],23:[function(t,e,r){var o=t("./LayoutConstants"),n=t("./HashMap"),i=t("./LGraphManager"),a=t("./LNode"),s=t("./LEdge"),h=t("./LGraph"),l=t("./PointD"),g=t("./Transform"),c=t("./Emitter"),p=t("./HashSet");function u(t){c.call(this),this.layoutQuality=o.DEFAULT_QUALITY,this.createBendsAsNeeded=o.DEFAULT_CREATE_BENDS_AS_NEEDED,this.incremental=o.DEFAULT_INCREMENTAL,this.animationOnLayout=o.DEFAULT_ANIMATION_ON_LAYOUT,this.animationDuringLayout=o.DEFAULT_ANIMATION_DURING_LAYOUT,this.animationPeriod=o.DEFAULT_ANIMATION_PERIOD,this.uniformLeafNodeSizes=o.DEFAULT_UNIFORM_LEAF_NODE_SIZES,this.edgeToDummyNodes=new n,this.graphManager=new i(this),this.isLayoutFinished=!1,this.isSubLayout=!1,this.isRemoteUse=!1,null!=t&&(this.isRemoteUse=t)}u.RANDOM_SEED=1,u.prototype=Object.create(c.prototype),u.prototype.getGraphManager=function(){return this.graphManager},u.prototype.getAllNodes=function(){return this.graphManager.getAllNodes()},u.prototype.getAllEdges=function(){return this.graphManager.getAllEdges()},u.prototype.getAllNodesToApplyGravitation=function(){return this.graphManager.getAllNodesToApplyGravitation()},u.prototype.newGraphManager=function(){var t=new i(this);return this.graphManager=t,t},u.prototype.newGraph=function(t){return new h(null,this.graphManager,t)},u.prototype.newNode=function(t){return new a(this.graphManager,t)},u.prototype.newEdge=function(t){return new s(null,null,t)},u.prototype.runLayout=function(){var t;return this.isLayoutFinished=!1,this.initParameters(),null==this.graphManager.getRoot()||0==this.graphManager.getRoot().getNodes().length||this.graphManager.includesInvalidEdge()?t=!1:(this.isSubLayout||(new Date).getTime(),t=this.layout(),this.isSubLayout||(new Date).getTime()),t&&(this.isSubLayout||this.doPostLayout()),this.isLayoutFinished=!0,t},u.prototype.doPostLayout=function(){this.transform(),this.update()},u.prototype.update2=function(){if(this.createBendsAsNeeded&&(this.createBendpointsFromDummyNodes(),this.graphManager.resetAllEdges()),!this.isRemoteUse){for(var t=this.graphManager.getAllEdges(),e=0;e<t.length;e++)t[e];for(var r=this.graphManager.getRoot().getNodes(),e=0;e<r.length;e++)r[e];this.update(this.graphManager.getRoot())}},u.prototype.update=function(t){if(null==t)this.update2();else if(t instanceof a){var e=t;if(null!=e.getChild())for(var r=e.getChild().getNodes(),o=0;o<r.length;o++)update(r[o]);if(null!=e.vGraphObject){var n=e.vGraphObject;n.update(e)}}else if(t instanceof s){var i=t;if(null!=i.vGraphObject){var l=i.vGraphObject;l.update(i)}}else if(t instanceof h){var g=t;if(null!=g.vGraphObject){var c=g.vGraphObject;c.update(g)}}},u.prototype.initParameters=function(){this.isSubLayout||(this.layoutQuality=o.DEFAULT_QUALITY,this.animationDuringLayout=o.DEFAULT_ANIMATION_ON_LAYOUT,this.animationPeriod=o.DEFAULT_ANIMATION_PERIOD,this.animationOnLayout=o.DEFAULT_ANIMATION_DURING_LAYOUT,this.incremental=o.DEFAULT_INCREMENTAL,this.createBendsAsNeeded=o.DEFAULT_CREATE_BENDS_AS_NEEDED,this.uniformLeafNodeSizes=o.DEFAULT_UNIFORM_LEAF_NODE_SIZES),this.animationDuringLayout&&(animationOnLayout=!1)},u.prototype.transform=function(t){if(void 0==t)this.transform(new l(0,0));else{var e=new g,r=this.graphManager.getRoot().updateLeftTop();if(null!=r){e.setWorldOrgX(t.x),e.setWorldOrgY(t.y),e.setDeviceOrgX(r.x),e.setDeviceOrgY(r.y);for(var o=this.getAllNodes(),n=0;n<o.length;n++)o[n].transform(e)}}},u.prototype.positionNodesRandomly=function(t){if(void 0==t)this.positionNodesRandomly(this.getGraphManager().getRoot()),this.getGraphManager().getRoot().updateBounds(!0);else for(var e,r,o=t.getNodes(),n=0;n<o.length;n++)e=o[n],null==(r=e.getChild())?e.scatter():0==r.getNodes().length?e.scatter():(this.positionNodesRandomly(r),e.updateBounds())},u.prototype.getFlatForest=function(){for(var t=[],e=!0,r=this.graphManager.getRoot().getNodes(),o=!0,i=0;i<r.length;i++)null!=r[i].getChild()&&(o=!1);if(!o)return t;var a=new p,s=[],h=new n,l=[];for(l=l.concat(r);l.length>0&&e;){for(s.push(l[0]);s.length>0&&e;){var g=s[0];s.splice(0,1),a.add(g);for(var c=g.getEdges(),i=0;i<c.length;i++){var u=c[i].getOtherEnd(g);if(h.get(g)!=u){if(a.contains(u)){e=!1;break}s.push(u),h.put(u,g)}}}if(e){var d=[];a.addAllTo(d),t.push(d);for(var i=0;i<d.length;i++){var f=d[i],y=l.indexOf(f);y>-1&&l.splice(y,1)}a=new p,h=new n}else t=[]}return t},u.prototype.createDummyNodesForBendpoints=function(t){for(var e=[],r=t.source,o=this.graphManager.calcLowestCommonAncestor(t.source,t.target),n=0;n<t.bendpoints.length;n++){var i=this.newNode(null);i.setRect(new Point(0,0),new Dimension(1,1)),o.add(i);var a=this.newEdge(null);this.graphManager.add(a,r,i),e.add(i),r=i}var a=this.newEdge(null);return this.graphManager.add(a,r,t.target),this.edgeToDummyNodes.put(t,e),t.isInterGraph()?this.graphManager.remove(t):o.remove(t),e},u.prototype.createBendpointsFromDummyNodes=function(){var t=[];t=t.concat(this.graphManager.getAllEdges()),t=this.edgeToDummyNodes.keySet().concat(t);for(var e=0;e<t.length;e++){var r=t[e];if(r.bendpoints.length>0){for(var o=this.edgeToDummyNodes.get(r),n=0;n<o.length;n++){var i=o[n],a=new l(i.getCenterX(),i.getCenterY()),s=r.bendpoints.get(n);s.x=a.x,s.y=a.y,i.getOwner().remove(i)}this.graphManager.add(r,r.source,r.target)}}},u.transform=function(t,e,r,o){if(void 0!=r&&void 0!=o){var n=e;if(t<=50){var i=e/r;n-=(e-i)/50*(50-t)}else{var a=e*o;n+=(a-e)/50*(t-50)}return n}var s,h;return t<=50?(s=9*e/500,h=e/10):(s=9*e/50,h=-8*e),s*t+h},u.findCenterOfTree=function(t){var e=[];e=e.concat(t);var r=[],o=new n,i=!1,a=null;1!=e.length&&2!=e.length||(i=!0,a=e[0]);for(var s=0;s<e.length;s++){var h=e[s],l=h.getNeighborsList().size();o.put(h,h.getNeighborsList().size()),1==l&&r.push(h)}var g=[];for(g=g.concat(r);!i;){var c=[];c=c.concat(g),g=[];for(var s=0;s<e.length;s++){var h=e[s],p=e.indexOf(h);p>=0&&e.splice(p,1);var u=h.getNeighborsList();for(var d in u.set){var f=u.set[d];if(r.indexOf(f)<0){var y=o.get(f),E=y-1;1==E&&g.push(f),o.put(f,E)}}}r=r.concat(g),1!=e.length&&2!=e.length||(i=!0,a=e[0])}return a},u.prototype.setGraphManager=function(t){this.graphManager=t},e.exports=u},{"./Emitter":8,"./HashMap":13,"./HashSet":14,"./LEdge":18,"./LGraph":19,"./LGraphManager":20,"./LNode":22,"./LayoutConstants":24,"./PointD":26,"./Transform":30}],24:[function(t,e,r){function o(){}o.PROOF_QUALITY=0,o.DEFAULT_QUALITY=1,o.DRAFT_QUALITY=2,o.DEFAULT_CREATE_BENDS_AS_NEEDED=!1,o.DEFAULT_INCREMENTAL=!1,o.DEFAULT_ANIMATION_ON_LAYOUT=!0,o.DEFAULT_ANIMATION_DURING_LAYOUT=!1,o.DEFAULT_ANIMATION_PERIOD=50,o.DEFAULT_UNIFORM_LEAF_NODE_SIZES=!1,o.DEFAULT_GRAPH_MARGIN=15,o.SIMPLE_NODE_SIZE=40,o.SIMPLE_NODE_HALF_SIZE=o.SIMPLE_NODE_SIZE/2,o.EMPTY_COMPOUND_NODE_SIZE=40,o.MIN_EDGE_LENGTH=1,o.WORLD_BOUNDARY=1e6,o.INITIAL_WORLD_BOUNDARY=o.WORLD_BOUNDARY/1e3,o.WORLD_CENTER_X=1200,o.WORLD_CENTER_Y=900,e.exports=o},{}],25:[function(t,e,r){function o(t,e,r){this.x=null,this.y=null,null==t&&null==e&&null==r?(this.x=0,this.y=0):"number"==typeof t&&"number"==typeof e&&null==r?(this.x=t,this.y=e):"Point"==t.constructor.name&&null==e&&null==r&&(r=t,this.x=r.x,this.y=r.y)}o.prototype.getX=function(){return this.x},o.prototype.getY=function(){return this.y},o.prototype.getLocation=function(){return new o(this.x,this.y)},o.prototype.setLocation=function(t,e,r){"Point"==t.constructor.name&&null==e&&null==r?(r=t,this.setLocation(r.x,r.y)):"number"==typeof t&&"number"==typeof e&&null==r&&(parseInt(t)==t&&parseInt(e)==e?this.move(t,e):(this.x=Math.floor(t+.5),this.y=Math.floor(e+.5)))},o.prototype.move=function(t,e){this.x=t,this.y=e},o.prototype.translate=function(t,e){this.x+=t,this.y+=e},o.prototype.equals=function(t){if("Point"==t.constructor.name){var e=t;return this.x==e.x&&this.y==e.y}return this==t},o.prototype.toString=function(){return(new o).constructor.name+"[x="+this.x+",y="+this.y+"]"},e.exports=o},{}],26:[function(t,e,r){function o(t,e){null==t&&null==e?(this.x=0,this.y=0):(this.x=t,this.y=e)}o.prototype.getX=function(){return this.x},o.prototype.getY=function(){return this.y},o.prototype.setX=function(t){this.x=t},o.prototype.setY=function(t){this.y=t},o.prototype.getDifference=function(t){return new DimensionD(this.x-t.x,this.y-t.y)},o.prototype.getCopy=function(){return new o(this.x,this.y)},o.prototype.translate=function(t){return this.x+=t.width,this.y+=t.height,this},e.exports=o},{}],27:[function(t,e,r){function o(){}o.seed=1,o.x=0,o.nextDouble=function(){return o.x=1e4*Math.sin(o.seed++),o.x-Math.floor(o.x)},e.exports=o},{}],28:[function(t,e,r){function o(t,e,r,o){this.x=0,this.y=0,this.width=0,this.height=0,null!=t&&null!=e&&null!=r&&null!=o&&(this.x=t,this.y=e,this.width=r,this.height=o)}o.prototype.getX=function(){return this.x},o.prototype.setX=function(t){this.x=t},o.prototype.getY=function(){return this.y},o.prototype.setY=function(t){this.y=t},o.prototype.getWidth=function(){return this.width},o.prototype.setWidth=function(t){this.width=t},o.prototype.getHeight=function(){return this.height},o.prototype.setHeight=function(t){this.height=t},o.prototype.getRight=function(){return this.x+this.width},o.prototype.getBottom=function(){return this.y+this.height},o.prototype.intersects=function(t){return!(this.getRight()<t.x||this.getBottom()<t.y||t.getRight()<this.x||t.getBottom()<this.y)},o.prototype.getCenterX=function(){return this.x+this.width/2},o.prototype.getMinX=function(){return this.getX()},o.prototype.getMaxX=function(){return this.getX()+this.width},o.prototype.getCenterY=function(){return this.y+this.height/2},o.prototype.getMinY=function(){return this.getY()},o.prototype.getMaxY=function(){return this.getY()+this.height},o.prototype.getWidthHalf=function(){return this.width/2},o.prototype.getHeightHalf=function(){return this.height/2},e.exports=o},{}],29:[function(t,e,r){e.exports=function(t){t.toBeTiled={},t.getToBeTiled=function(e){var r=e.data("id");if(null!=t.toBeTiled[r])return t.toBeTiled[r];var o=e.children();if(null==o||0==o.length)return t.toBeTiled[r]=!1,!1;for(var n=0;n<o.length;n++){var i=o[n];if(t.getNodeDegree(i)>0)return t.toBeTiled[r]=!1,!1;if(null!=i.children()&&0!=i.children().length){if(!t.getToBeTiled(i))return t.toBeTiled[r]=!1,!1}else t.toBeTiled[i.data("id")]=!1}return t.toBeTiled[r]=!0,!0},t.getNodeDegree=function(e){var r=e.id(),o=t.options.eles.edges().filter(function(t,e){"number"==typeof t&&(t=e);var o=t.data("source"),n=t.data("target");if(o!=n&&(o==r||n==r))return!0});return o.length},t.getNodeDegreeWithChildren=function(e){for(var r=t.getNodeDegree(e),o=e.children(),n=0;n<o.length;n++){var i=o[n];r+=t.getNodeDegreeWithChildren(i)}return r},t.groupZeroDegreeMembers=function(){for(var e=[],r=[],o=this,n={},i=0;i<t.options.eles.nodes().length;i++)n[t.options.eles.nodes()[i].id()]=!0;for(var a=t.options.eles.nodes().filter(function(t,e){"number"==typeof t&&(t=e);var r=t.data("parent");return void 0==r||n[r]||(r=void 0),0==o.getNodeDegreeWithChildren(t)&&(void 0==r||void 0!=r&&!o.getToBeTiled(t.parent()[0]))}),i=0;i<a.length;i++){var s=a[i],h=s.parent().id();void 0==h||n[h]||(h=void 0),void 0===e[h]&&(e[h]=[]),e[h]=e[h].concat(s)}for(var h in e)if(e[h].length>1){var l="DummyCompound_"+h;if(r[l]=e[h],t.options.cy.getElementById(l).empty()){t.options.cy.add({group:"nodes",data:{id:l,parent:h}});var g=t.options.cy.nodes()[t.options.cy.nodes().length-1];t.options.eles=t.options.eles.union(g),g.hide();for(var i=0;i<e[h].length;i++){0==i&&g.scratch("coseBilkent",{tempchildren:[]});var s=e[h][i],c=s.scratch("coseBilkent");c||(c={},s.scratch("coseBilkent",c)),c.dummy_parent_id=l,t.options.cy.add({group:"nodes",data:{parent:l,width:s.width(),height:s.height()}});var p=t.options.cy.nodes()[t.options.cy.nodes().length-1];p.hide(),p.css("width",p.data("width")),p.css("height",p.data("height")),p.width(),g.scratch("coseBilkent").tempchildren.push(p)}}}return r},t.performDFSOnCompounds=function(e){var r=[],o=t.getTopMostNodes(t.options.eles.nodes());return t.fillCompexOrderByDFS(r,o),r},t.fillCompexOrderByDFS=function(e,r){for(var o=0;o<r.length;o++){var n=r[o];t.fillCompexOrderByDFS(e,n.children()),t.getToBeTiled(n)&&e.push(n)}},t.clearCompounds=function(){var e=[],r=t.performDFSOnCompounds(t.options);t.compoundOrder=r,t.processChildrenList(t.root,t.getTopMostNodes(t.options.eles.nodes()),t.layout);for(var o=0;o<r.length;o++){var n=t.idToLNode[r[o].id()];e[r[o].id()]=r[o].children(),n.child=null}var i=t.tileCompoundMembers(e);return i},t.clearZeroDegreeMembers=function(e){var r=[];for(var o in e){var n=t.idToLNode[o];r[o]=t.tileNodes(e[o]),n.rect.width=r[o].width,n.rect.height=r[o].height}return r},t.repopulateCompounds=function(e){for(var r=t.compoundOrder.length-1;r>=0;r--){var o=t.compoundOrder[r].id(),n=t.idToLNode[o],i=parseInt(t.compoundOrder[r].css("padding-left")),a=parseInt(t.compoundOrder[r].css("padding-top"));t.adjustLocations(e[o],n.rect.x,n.rect.y,i,a)}},t.repopulateZeroDegreeMembers=function(e){for(var r in e){var o=t.cy.getElementById(r),n=t.idToLNode[r],i=parseInt(o.css("padding-left")),a=parseInt(o.css("padding-top"));t.adjustLocations(e[r],n.rect.x,n.rect.y,i,a);for(var s=o.scratch("coseBilkent").tempchildren,r=0;r<s.length;r++)s[r].remove();o.remove()}},t.adjustLocations=function(e,r,o,n,i){o+=i;for(var a=r+=n,s=0;s<e.rows.length;s++){var h=e.rows[s];r=a;for(var l=0,g=0;g<h.length;g++){var c=h[g];t.cy.getElementById(c.id),c.rect.x=r,c.rect.y=o,r+=c.rect.width+e.horizontalPadding,c.rect.height>l&&(l=c.rect.height)}o+=l+e.verticalPadding}},t.tileCompoundMembers=function(e){var r=[];for(var o in e){var n=t.idToLNode[o];r[o]=t.tileNodes(e[o]),n.rect.width=r[o].width+20,n.rect.height=r[o].height+20}return r},t.tileNodes=function(e){for(var r="function"==typeof this.options.tilingPaddingVertical?this.options.tilingPaddingVertical.call():this.options.tilingPaddingVertical,o="function"==typeof this.options.tilingPaddingHorizontal?this.options.tilingPaddingHorizontal.call():this.options.tilingPaddingHorizontal,n={rows:[],rowWidth:[],rowHeight:[],width:20,height:20,verticalPadding:r,horizontalPadding:o},i=[],a=0;a<e.length;a++){var s=e[a],h=t.idToLNode[s.id()];if(!s.scratch("coseBilkent")||!s.scratch("coseBilkent").dummy_parent_id){var l=h.owner;l.remove(h),t.gm.resetAllNodes(),t.gm.getAllNodes()}i.push(h)}i.sort(function(t,e){return t.rect.width*t.rect.height>e.rect.width*e.rect.height?-1:t.rect.width*t.rect.height<e.rect.width*e.rect.height?1:0});for(var a=0;a<i.length;a++){var h=i[a],g=t.cy.getElementById(h.id).parent()[0],c=0;g&&(c=parseInt(g.css("padding-left"))+parseInt(g.css("padding-right"))),0==n.rows.length?t.insertNodeToRow(n,h,0,c):t.canAddHorizontal(n,h.rect.width,h.rect.height)?t.insertNodeToRow(n,h,t.getShortestRowIndex(n),c):t.insertNodeToRow(n,h,n.rows.length,c),t.shiftToLastRow(n)}return n},t.insertNodeToRow=function(t,e,r,o){var n=o;r==t.rows.length&&(t.rows.push([]),t.rowWidth.push(n),t.rowHeight.push(0));var i=t.rowWidth[r]+e.rect.width;t.rows[r].length>0&&(i+=t.horizontalPadding),t.rowWidth[r]=i,t.width<i&&(t.width=i);var a=e.rect.height;r>0&&(a+=t.verticalPadding);var s=0;a>t.rowHeight[r]&&(s=t.rowHeight[r],t.rowHeight[r]=a,s=t.rowHeight[r]-s),t.height+=s,t.rows[r].push(e)},t.getShortestRowIndex=function(t){for(var e=-1,r=Number.MAX_VALUE,o=0;o<t.rows.length;o++)t.rowWidth[o]<r&&(e=o,r=t.rowWidth[o]);return e},t.getLongestRowIndex=function(t){for(var e=-1,r=Number.MIN_VALUE,o=0;o<t.rows.length;o++)t.rowWidth[o]>r&&(e=o,r=t.rowWidth[o]);return e},t.canAddHorizontal=function(e,r,o){var n=t.getShortestRowIndex(e);if(n<0)return!0;var i=e.rowWidth[n];if(i+e.horizontalPadding+r<=e.width)return!0;var a,s,h=0;return e.rowHeight[n]<o&&n>0&&(h=o+e.verticalPadding-e.rowHeight[n]),a=e.width-i>=r+e.horizontalPadding?(e.height+h)/(i+r+e.horizontalPadding):(e.height+h)/e.width,h=o+e.verticalPadding,(s=e.width<r?(e.height+h)/r:(e.height+h)/e.width)<1&&(s=1/s),a<1&&(a=1/a),a<s},t.shiftToLastRow=function(e){var r=t.getLongestRowIndex(e),o=e.rowWidth.length-1,n=e.rows[r],i=n[n.length-1],a=i.width+e.horizontalPadding;if(e.width-e.rowWidth[o]>a&&r!=o){n.splice(-1,1),e.rows[o].push(i),e.rowWidth[r]=e.rowWidth[r]-a,e.rowWidth[o]=e.rowWidth[o]+a,e.width=e.rowWidth[t.getLongestRowIndex(e)];for(var s=Number.MIN_VALUE,h=0;h<n.length;h++)n[h].height>s&&(s=n[h].height);r>0&&(s+=e.verticalPadding);var l=e.rowHeight[r]+e.rowHeight[o];e.rowHeight[r]=s,e.rowHeight[o]<i.height+e.verticalPadding&&(e.rowHeight[o]=i.height+e.verticalPadding);var g=e.rowHeight[r]+e.rowHeight[o];e.height+=g-l,t.shiftToLastRow(e)}},t.preLayout=function(){var e=t.groupZeroDegreeMembers();t.tiledMemberPack=t.clearCompounds(),t.tiledZeroDegreeNodes=t.clearZeroDegreeMembers(e)},t.postLayout=function(){for(var e=t.options.eles.nodes(),r=0;r<e.length;r++)t.getToBeTiled(e[r]);t.repopulateZeroDegreeMembers(t.tiledZeroDegreeNodes),t.repopulateCompounds(t.tiledMemberPack),t.options.cy.nodes().updateCompoundBounds()}}},{}],30:[function(t,e,r){var o=t("./PointD");function n(t,e){this.lworldOrgX=0,this.lworldOrgY=0,this.ldeviceOrgX=0,this.ldeviceOrgY=0,this.lworldExtX=1,this.lworldExtY=1,this.ldeviceExtX=1,this.ldeviceExtY=1}n.prototype.getWorldOrgX=function(){return this.lworldOrgX},n.prototype.setWorldOrgX=function(t){this.lworldOrgX=t},n.prototype.getWorldOrgY=function(){return this.lworldOrgY},n.prototype.setWorldOrgY=function(t){this.lworldOrgY=t},n.prototype.getWorldExtX=function(){return this.lworldExtX},n.prototype.setWorldExtX=function(t){this.lworldExtX=t},n.prototype.getWorldExtY=function(){return this.lworldExtY},n.prototype.setWorldExtY=function(t){this.lworldExtY=t},n.prototype.getDeviceOrgX=function(){return this.ldeviceOrgX},n.prototype.setDeviceOrgX=function(t){this.ldeviceOrgX=t},n.prototype.getDeviceOrgY=function(){return this.ldeviceOrgY},n.prototype.setDeviceOrgY=function(t){this.ldeviceOrgY=t},n.prototype.getDeviceExtX=function(){return this.ldeviceExtX},n.prototype.setDeviceExtX=function(t){this.ldeviceExtX=t},n.prototype.getDeviceExtY=function(){return this.ldeviceExtY},n.prototype.setDeviceExtY=function(t){this.ldeviceExtY=t},n.prototype.transformX=function(t){var e=0,r=this.lworldExtX;return 0!=r&&(e=this.ldeviceOrgX+(t-this.lworldOrgX)*this.ldeviceExtX/r),e},n.prototype.transformY=function(t){var e=0,r=this.lworldExtY;return 0!=r&&(e=this.ldeviceOrgY+(t-this.lworldOrgY)*this.ldeviceExtY/r),e},n.prototype.inverseTransformX=function(t){var e=0,r=this.ldeviceExtX;return 0!=r&&(e=this.lworldOrgX+(t-this.ldeviceOrgX)*this.lworldExtX/r),e},n.prototype.inverseTransformY=function(t){var e=0,r=this.ldeviceExtY;return 0!=r&&(e=this.lworldOrgY+(t-this.ldeviceOrgY)*this.lworldExtY/r),e},n.prototype.inverseTransformPoint=function(t){var e=new o(this.inverseTransformX(t.x),this.inverseTransformY(t.y));return e},e.exports=n},{"./PointD":26}],31:[function(t,e,r){function o(){}o.lastID=0,o.createID=function(t){return o.isPrimitive(t)?t:null!=t.uniqueID?t.uniqueID:(t.uniqueID=o.getString(),o.lastID++,t.uniqueID)},o.getString=function(t){return null==t&&(t=o.lastID),"Object#"+t},o.isPrimitive=function(t){var e=typeof t;return null==t||"object"!=e&&"function"!=e},e.exports=o},{}],32:[function(t,e,r){"use strict";var o=t("./DimensionD"),n=(t("./HashMap"),t("./HashSet"),t("./IGeometry"),t("./IMath"),t("./Integer"),t("./Point"),t("./PointD")),i=(t("./RandomSeed"),t("./RectangleD"),t("./Transform"),t("./UniqueIDGeneretor"),t("./LGraphObject"),t("./LGraph"),t("./LEdge"),t("./LGraphManager"),t("./LNode"),t("./Layout"),t("./LayoutConstants")),a=(t("./FDLayout"),t("./FDLayoutConstants")),s=(t("./FDLayoutEdge"),t("./FDLayoutNode"),t("./CoSEConstants")),h=(t("./CoSEEdge"),t("./CoSEGraph"),t("./CoSEGraphManager"),t("./CoSELayout")),l=t("./CoSENode"),g=t("./TilingExtension"),c={ready:function(){},stop:function(){},refresh:30,fit:!0,padding:10,paddingCompound:15,randomize:!0,nodeRepulsion:4500,idealEdgeLength:50,edgeElasticity:.45,nestingFactor:.1,gravity:.25,numIter:2500,tile:!0,animate:"end",animationDuration:500,tilingPaddingVertical:10,tilingPaddingHorizontal:10,gravityRangeCompound:1.5,gravityCompound:1,gravityRange:3.8};function p(t){g(this),this.options=function(t,e){var r={};for(var o in t)r[o]=t[o];for(var o in e)r[o]=e[o];return r}(c,t),u(this.options)}var u=function(t){null!=t.nodeRepulsion&&(s.DEFAULT_REPULSION_STRENGTH=a.DEFAULT_REPULSION_STRENGTH=t.nodeRepulsion),null!=t.idealEdgeLength&&(s.DEFAULT_EDGE_LENGTH=a.DEFAULT_EDGE_LENGTH=t.idealEdgeLength),null!=t.edgeElasticity&&(s.DEFAULT_SPRING_STRENGTH=a.DEFAULT_SPRING_STRENGTH=t.edgeElasticity),null!=t.nestingFactor&&(s.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR=a.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR=t.nestingFactor),null!=t.gravity&&(s.DEFAULT_GRAVITY_STRENGTH=a.DEFAULT_GRAVITY_STRENGTH=t.gravity),null!=t.numIter&&(s.MAX_ITERATIONS=a.MAX_ITERATIONS=t.numIter),null!=t.paddingCompound&&(s.DEFAULT_GRAPH_MARGIN=a.DEFAULT_GRAPH_MARGIN=i.DEFAULT_GRAPH_MARGIN=t.paddingCompound),null!=t.gravityRange&&(s.DEFAULT_GRAVITY_RANGE_FACTOR=a.DEFAULT_GRAVITY_RANGE_FACTOR=t.gravityRange),null!=t.gravityCompound&&(s.DEFAULT_COMPOUND_GRAVITY_STRENGTH=a.DEFAULT_COMPOUND_GRAVITY_STRENGTH=t.gravityCompound),null!=t.gravityRangeCompound&&(s.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR=a.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR=t.gravityRangeCompound),s.DEFAULT_INCREMENTAL=a.DEFAULT_INCREMENTAL=i.DEFAULT_INCREMENTAL=!t.randomize,s.ANIMATE=a.ANIMATE=t.animate};p.prototype.run=function(){var t,e,r=this.options,o=(this.idToLNode={},this.layout=new h),n=this;this.cy=this.options.cy,this.cy.trigger({type:"layoutstart",layout:this});var i=o.newGraphManager();this.gm=i;var a=this.options.eles.nodes(),s=this.options.eles.edges();this.root=i.addRoot(),this.options.tile?this.preLayout():this.processChildrenList(this.root,this.getTopMostNodes(a),o);for(var l=0;l<s.length;l++){var g=s[l],c=this.idToLNode[g.data("source")],p=this.idToLNode[g.data("target")],u=i.add(o.newEdge(),c,p);u.id=g.id()}var d=function(t,e){"number"==typeof t&&(t=e);var r=t.data("id"),o=n.idToLNode[r];return{x:o.getRect().getCenterX(),y:o.getRect().getCenterY()}},f=function(){for(var o,i=function(){r.fit&&r.cy.fit(r.eles.nodes(),r.padding),t||(t=!0,n.cy.one("layoutready",r.ready),n.cy.trigger({type:"layoutready",layout:n}))},a=n.options.refresh,s=0;s<a&&!o;s++)o=n.layout.tick();if(o)return n.options.tile&&n.postLayout(),n.options.eles.nodes().positions(d),i(),n.cy.one("layoutstop",n.options.stop),n.cy.trigger("layoutstop"),n.cy.trigger({type:"layoutstop",layout:n}),e&&cancelAnimationFrame(e),n.options.eles.nodes().removeScratch("coseBilkent"),void(t=!1);var h=n.layout.getPositionsData();r.eles.nodes().positions(function(t,e){if("number"==typeof t&&(t=e),t.scratch("coseBilkent")&&t.scratch("coseBilkent").dummy_parent_id){var r=t.scratch("coseBilkent").dummy_parent_id;return{x:r.x,y:r.y}}for(var o=t.data("id"),n=h[o],i=t;null==n;)i=i.parent()[0],n=h[i.id()],h[o]=n;return{x:n.x,y:n.y}}),i(),e=requestAnimationFrame(f)};return o.addListener("layoutstarted",function(){"during"===n.options.animate&&(e=requestAnimationFrame(f))}),o.runLayout(),"during"!==this.options.animate&&setTimeout(function(){n.options.tile&&n.postLayout(),n.options.eles.nodes().not(":parent").layoutPositions(n,n.options,d),n.options.eles.nodes().removeScratch("coseBilkent"),t=!1},0),this},p.prototype.getTopMostNodes=function(t){for(var e={},r=0;r<t.length;r++)e[t[r].id()]=!0;var o=t.filter(function(t,r){"number"==typeof t&&(t=r);for(var o=t.parent()[0];null!=o;){if(e[o.id()])return!1;o=o.parent()[0]}return!0});return o},p.prototype.processChildrenList=function(t,e,r){for(var i=e.length,a=0;a<i;a++){var s=e[a];this.options.eles.nodes().length;var h,g,c=s.children();(h=null!=s.width()&&null!=s.height()?t.add(new l(r.graphManager,new n(s.position("x"),s.position("y")),new o(parseFloat(s.width()),parseFloat(s.height())))):t.add(new l(this.graphManager))).id=s.data("id"),this.idToLNode[s.data("id")]=h,isNaN(h.rect.x)&&(h.rect.x=0),isNaN(h.rect.y)&&(h.rect.y=0),null!=c&&c.length>0&&(g=r.getGraphManager().add(r.newGraph(),h),this.processChildrenList(g,c,r))}},p.prototype.stop=function(){return this.stopped=!0,this.trigger("layoutstop"),this},e.exports=function(t){return p}},{"./CoSEConstants":1,"./CoSEEdge":2,"./CoSEGraph":3,"./CoSEGraphManager":4,"./CoSELayout":5,"./CoSENode":6,"./DimensionD":7,"./FDLayout":9,"./FDLayoutConstants":10,"./FDLayoutEdge":11,"./FDLayoutNode":12,"./HashMap":13,"./HashSet":14,"./IGeometry":15,"./IMath":16,"./Integer":17,"./LEdge":18,"./LGraph":19,"./LGraphManager":20,"./LGraphObject":21,"./LNode":22,"./Layout":23,"./LayoutConstants":24,"./Point":25,"./PointD":26,"./RandomSeed":27,"./RectangleD":28,"./TilingExtension":29,"./Transform":30,"./UniqueIDGeneretor":31}],33:[function(t,e,r){"use strict";var o=t("./Layout"),n=function(t){var e=o(t);t("layout","cose-bilkent",e)};"undefined"!=typeof cytoscape&&n(cytoscape),e.exports=n},{"./Layout":32}]},{},[33])(33)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,